<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>haohao</title>
  <subtitle>不忘初心</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://githubhaohao.github.io/"/>
  <updated>2017-04-17T03:05:47.971Z</updated>
  <id>https://githubhaohao.github.io/</id>
  
  <author>
    <name>haohao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android Clean 架构浅析</title>
    <link href="https://githubhaohao.github.io/2017/04/15/Android-Clean-%E6%9E%B6%E6%9E%84%E6%B5%85%E6%9E%90/"/>
    <id>https://githubhaohao.github.io/2017/04/15/Android-Clean-架构浅析/</id>
    <published>2017-04-15T13:07:34.000Z</published>
    <updated>2017-04-17T03:05:47.971Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i1.piimg.com/588795/f96da96df4251851.jpg" alt="Cover"></p>
<p align="center">死磕 Android 架构也是一种娱乐</p>

<blockquote><p>Android 常用的架构主要有 MVC，MVP，MVVM 以及 Clean 。以上架构设计模式没有绝对的优劣之分，关键要看具体的应用场景。更多关于 MVC，MVP 以及 MVVM 介绍可以参考<a href="http://haohaochang.cn/2017/02/12/MVVM%EF%BC%8CRxJava%E5%92%8CRetrofit%E7%9A%84%E4%B8%80%E6%AC%A1%E5%AE%9E%E8%B7%B5/" target="_blank" rel="external">MVC,MVP &amp; MVVM</a></p>
</blockquote>
<h2 id="什么是-Clean-架构？"><a href="#什么是-Clean-架构？" class="headerlink" title="什么是 Clean 架构？"></a>什么是 Clean 架构？</h2><p><img src="http://www.elapsetech.com/media/107552/Close-Up-Robert-C-Martin.jpg" alt="author"></p>
<p align="center">Robert C. Martin (Uncle Bob)</p>

<p>Clean 架构是由 Uncle Bob 在 2012 年发表的, 针对 Web App 的架构设计。 </p>
<p>Bob大叔总结了各种系统架构的共通之处以及最终目标，并提出只需秉持分层与依赖规则的原则, 提出了 Clean 架构思想。</p>
<h2 id="Clean-架构浅析"><a href="#Clean-架构浅析" class="headerlink" title="Clean 架构浅析"></a>Clean 架构浅析</h2><h3 id="单向依赖"><a href="#单向依赖" class="headerlink" title="单向依赖"></a>单向依赖</h3><p><img src="https://fernandocejas.com/assets/migrated/clean_architecture1.png" alt="Cover"></p>
<p align="center">图片来自 Robert C. Martin (Uncle Bob)</p>

<p>Clean 架构各层之间的依赖是单向的，只能是外层依赖内层。</p>
<h3 id="MVP-VS-Clean"><a href="#MVP-VS-Clean" class="headerlink" title="MVP VS Clean"></a>MVP VS Clean</h3><p><img src="https://github.com/googlesamples/android-architecture/wiki/images/mvp-clean.png" alt="Cover"></p>
<p align="center">图片来自 Google</p>

<p>从上图可以看到 Clean 架构的 Android 实现，实际上是对目前比较流行的 MVP 架构进行改造。</p>
<p>MVP 之 View 和 Presenter 层作为 Clean 架构的 Presentations Layer, 新增 Domain Layer    处理所有的业务逻辑。MVP 中的 Model 层功能被弱化，作为 Data Layer 对外只提供接口，不再有业务逻辑。 一般来说每一层都有独立的数据模型。</p>
<h3 id="Clean-之-Presentation-层"><a href="#Clean-之-Presentation-层" class="headerlink" title="Clean 之 Presentation 层"></a>Clean 之 Presentation 层</h3><p>包含如下类： </p>
<ul>
<li>Presenter 和 View 层相关类，当然你也可以在 MVVP 架构基础之上进行改造。 </li>
<li>Mapper 类，负责将 Domain 层的数据模型转换为 Presentation 的数据模型。</li>
<li>本层的异常封装类。</li>
</ul>
<h3 id="Clean-之-Domain-层"><a href="#Clean-之-Domain-层" class="headerlink" title="Clean 之 Domain 层"></a>Clean 之 Domain 层</h3><p>Domain 层不依赖于 Android 类库和第三方库，可以独立做单元测试。</p>
<p>包含如下类：</p>
<ul>
<li>Use Cases (Interactor）类，负责完成对 Data 层的某一操作行为。（如获取 movie list ,获取某一 movie 的 detail info 可视为 2 个 Use Case 或 Interactor）。</li>
<li>Mapper 类，负责将 Data 层的数据模型转换为 Domain 层的数据模型。</li>
<li>本层的异常封装类。</li>
</ul>
<h3 id="Clean-之-Data-层"><a href="#Clean-之-Data-层" class="headerlink" title="Clean 之 Data 层"></a>Clean 之 Data 层</h3><p><img src="https://fernandocejas.com/assets/migrated/clean_architecture_data.png" alt="data"></p>
<p align="center">图片来自 Robert C. Martin (Uncle Bob)</p>

<p>这张图就足够说明一切了。</p>
<p>包含各种 API 接口，主要对应数据库操作，文件操作以及网络数据操作，一些异常封装类。<br>Mapper 类，负责将网络数据模型转换为 Data 层的数据模型。</p>
<p><strong>注意 Data 层只提供接口，没有业务逻辑。</strong></p>
<h3 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h3><ul>
<li><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp-clean/" target="_blank" rel="external">https://github.com/googlesamples/android-architecture/tree/todo-mvp-clean/</a></li>
<li><a href="https://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/" target="_blank" rel="external">https://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i1.piimg.com/588795/f96da96df4251851.jpg&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;死磕 Android 架构也是一种娱乐&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And
    
    </summary>
    
      <category term="Android" scheme="https://githubhaohao.github.io/categories/Android/"/>
    
    
      <category term="Clean 架构" scheme="https://githubhaohao.github.io/tags/Clean-%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView 加载与刷新功能实现</title>
    <link href="https://githubhaohao.github.io/2017/04/13/RecyclerView-%E5%8A%A0%E8%BD%BD%E4%B8%8E%E5%88%B7%E6%96%B0%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    <id>https://githubhaohao.github.io/2017/04/13/RecyclerView-加载与刷新功能实现/</id>
    <published>2017-04-13T10:30:00.000Z</published>
    <updated>2017-04-13T11:18:12.690Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i2.muimg.com/588795/9485f3b972f5ed01.jpg" alt="Cover"></p>
<p align="center">坚持就是进步</p>

<blockquote><p>最近 Kotlin Android 开发貌似要火起来，Kotlin 具有脚本语言风格，能与 Java 无缝兼容，并且有 Google 有意栽培。</p>
</blockquote>
<h2 id="RecyclerView-加载与刷新功能实现"><a href="#RecyclerView-加载与刷新功能实现" class="headerlink" title="RecyclerView 加载与刷新功能实现"></a>RecyclerView 加载与刷新功能实现</h2><p>RecyclerView 功能及灵活性强大到令人发指。在开发中，完全可以用它代替 ListView 和 GridView ，并且还具有瀑布流展示功能。</p>
<p>本文主要对 RecyclerView 进行简单的封装，来实现加载、刷新以及异常状态展示多种功能，实现及其简单，代码量很少。</p>
<h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p><img src="http://i1.piimg.com/588795/ddbeb1bc164791d2.gif" alt="jc-a"><br><img src="http://i1.piimg.com/588795/a8ccce06b8991393.gif" alt="jc-b"></p>
<p><a href="https://github.com/githubhaohao/JCRecyclerView/blob/master/demo.apk" target="_blank" rel="external">Demo 下载</a></p>
<blockquote><p><a href="https://github.com/githubhaohao/JCRecyclerView" target="_blank" rel="external">源码地址: https://github.com/githubhaohao/JCRecyclerView</a></p>
</blockquote>
<h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><p>JCRecyclerView 继承 RecyclerView ，保留 RecyclerView 的所有特性。</p>
<p>内部类 JCAdapter 对外部的 RecyclerView Adapter 进行拦截改造，实现根据配置在 position = 0 的位置加载 Ad-Slot View （广告位），加载时在底部显示 Bottom View 表视加载正在进行。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">JCAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RecyclerView</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> RecyclerView.Adapter adapter;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_ADSLOT = <span class="number">0x10</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_NORMAL = <span class="number">0x11</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_BOTTOM = <span class="number">0x12</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JCAdapter</span><span class="params">(RecyclerView.Adapter adapter)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.adapter = adapter;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewAttachedToWindow</span><span class="params">(ViewHolder holder)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onViewAttachedToWindow(holder);</div><div class="line">        ViewGroup.LayoutParams layoutParams = holder.itemView.getLayoutParams();</div><div class="line">        <span class="keyword">if</span>(layoutParams != <span class="keyword">null</span>)&#123;</div><div class="line">            <span class="keyword">if</span>(adSlotView != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span>(layoutParams <span class="keyword">instanceof</span>  StaggeredGridLayoutManager.LayoutParams &amp;&amp; holder.getLayoutPosition() == <span class="number">0</span>)&#123;</div><div class="line">                    StaggeredGridLayoutManager.LayoutParams p = (StaggeredGridLayoutManager.LayoutParams) layoutParams;</div><div class="line">                    p.setFullSpan(<span class="keyword">true</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (bottomView != <span class="keyword">null</span> &amp;&amp; isLoading) &#123;</div><div class="line">                <span class="keyword">if</span>(layoutParams <span class="keyword">instanceof</span>  StaggeredGridLayoutManager.LayoutParams &amp;&amp; holder.getLayoutPosition() == getItemCount() - <span class="number">1</span>)&#123;</div><div class="line">                    StaggeredGridLayoutManager.LayoutParams p = (StaggeredGridLayoutManager.LayoutParams) layoutParams;</div><div class="line">                    p.setFullSpan(<span class="keyword">true</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (layoutManager <span class="keyword">instanceof</span> GridLayoutManager) &#123;</div><div class="line">            <span class="keyword">final</span> GridLayoutManager gridManager = ((GridLayoutManager)</div><div class="line">                    layoutManager);</div><div class="line">            gridManager.setSpanSizeLookup(<span class="keyword">new</span> GridLayoutManager.SpanSizeLookup() &#123;</div><div class="line">                <span class="meta">@Override</span></div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSpanSize</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">                    <span class="keyword">boolean</span> spanResult = <span class="keyword">false</span>;</div><div class="line">                    <span class="keyword">if</span>(adSlotView != <span class="keyword">null</span> &amp;&amp; bottomView != <span class="keyword">null</span>) &#123;</div><div class="line">                        <span class="keyword">if</span> (isLoading) &#123;</div><div class="line">                            spanResult = (position == <span class="number">0</span> || position == getItemCount() - <span class="number">1</span>);</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            spanResult = (position == <span class="number">0</span>);</div><div class="line">                        &#125;</div><div class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (adSlotView != <span class="keyword">null</span>) &#123;</div><div class="line">                        spanResult = (position==<span class="number">0</span>);</div><div class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bottomView != <span class="keyword">null</span> &amp;&amp; isLoading) &#123;</div><div class="line">                        spanResult = (position == getItemCount() - <span class="number">1</span>);</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="keyword">return</span> spanResult</div><div class="line">                            ? gridManager.getSpanCount():<span class="number">1</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (viewType == TYPE_ADSLOT) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> JCViewHolder(adSlotView);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (viewType == TYPE_BOTTOM) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> JCViewHolder(bottomView);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> adapter.onCreateViewHolder(parent,viewType);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (getItemViewType(<span class="number">0</span>) == TYPE_ADSLOT) &#123;</div><div class="line">            <span class="keyword">if</span> (position == <span class="number">0</span>) <span class="keyword">return</span>;</div><div class="line">            <span class="keyword">int</span> newPosition = --position;</div><div class="line">            <span class="keyword">if</span> (adapter != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (newPosition &lt; adapter.getItemCount()) &#123;</div><div class="line">                    adapter.onBindViewHolder(holder, newPosition);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (getItemViewType(position) == TYPE_BOTTOM) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        adapter.onBindViewHolder(holder, position);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> count = adapter.getItemCount();</div><div class="line">        <span class="keyword">if</span> (adSlotView != <span class="keyword">null</span>) &#123;</div><div class="line">            count ++;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (bottomView != <span class="keyword">null</span> &amp;&amp; isLoading) &#123;</div><div class="line">            count ++;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> count;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemViewType</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (position == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> adSlotView == <span class="keyword">null</span> ? TYPE_NORMAL : TYPE_ADSLOT;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == getItemCount() - <span class="number">1</span> &amp;&amp; isLoading) &#123;</div><div class="line">            <span class="keyword">return</span> bottomView == <span class="keyword">null</span> ? TYPE_NORMAL : TYPE_BOTTOM;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> TYPE_NORMAL;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>向外暴露一个接口 OnLoadMoreListener ，完成加载时的回调。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnLoadMoreListener</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onLoadMore</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>整体思路就是这些，完整代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JCRecyclerView</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = JCRecyclerView.class.getSimpleName();</div><div class="line">    <span class="keyword">private</span> LayoutManager layoutManager;</div><div class="line">    <span class="keyword">private</span> ViewGroup adSlotView;</div><div class="line">    <span class="keyword">private</span> ViewGroup stateView;</div><div class="line">    <span class="keyword">private</span> ViewGroup bottomView;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isLoading = <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">private</span> JCAdapter jcAdapter;</div><div class="line">    <span class="keyword">private</span> OnLoadMoreListener onLoadMoreListener;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addOnLoadMoreListener</span><span class="params">(OnLoadMoreListener listener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.onLoadMoreListener = listener;</div><div class="line">        <span class="keyword">this</span>.addOnScrollListener(<span class="keyword">new</span> OnScrollListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScrollStateChanged</span><span class="params">(RecyclerView recyclerView, <span class="keyword">int</span> newState)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (recyclerView.getLayoutManager() <span class="keyword">instanceof</span> StaggeredGridLayoutManager) &#123;</div><div class="line">                    StaggeredGridLayoutManager layoutManager = (StaggeredGridLayoutManager) recyclerView.getLayoutManager();</div><div class="line">                    <span class="keyword">int</span> totalItemCount = recyclerView.getAdapter().getItemCount();</div><div class="line">                    <span class="keyword">int</span>[] lastVisibleItemPositions = <span class="keyword">new</span> <span class="keyword">int</span>[layoutManager.getSpanCount()];</div><div class="line">                    layoutManager.findLastVisibleItemPositions(lastVisibleItemPositions);</div><div class="line">                    <span class="keyword">int</span> visibleItemCount = recyclerView.getChildCount();</div><div class="line">                    <span class="keyword">int</span> lastVisibleItemPosition = findMaxPosition(lastVisibleItemPositions);</div><div class="line"></div><div class="line">                    <span class="keyword">if</span> (newState == RecyclerView.SCROLL_STATE_IDLE</div><div class="line">                            &amp;&amp; lastVisibleItemPosition == totalItemCount - <span class="number">1</span></div><div class="line">                            &amp;&amp; visibleItemCount &gt; <span class="number">0</span>) &#123;</div><div class="line">                        <span class="keyword">if</span> (bottomView == <span class="keyword">null</span> || isLoading || stateView != <span class="keyword">null</span>) <span class="keyword">return</span>;</div><div class="line"></div><div class="line">                        isLoading = <span class="keyword">true</span>;</div><div class="line">                        jcAdapter.notifyDataSetChanged();</div><div class="line">                        onLoadMoreListener.onLoadMore();</div><div class="line">                        scrollToPosition(jcAdapter.getItemCount() - <span class="number">1</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    LinearLayoutManager lm = (LinearLayoutManager) recyclerView.getLayoutManager();</div><div class="line">                    <span class="keyword">int</span> totalItemCount = recyclerView.getAdapter().getItemCount();</div><div class="line">                    <span class="keyword">int</span> lastVisibleItemPosition = lm.findLastVisibleItemPosition();</div><div class="line">                    <span class="keyword">int</span> visibleItemCount = recyclerView.getChildCount();</div><div class="line"></div><div class="line">                    <span class="keyword">if</span> (newState == RecyclerView.SCROLL_STATE_IDLE</div><div class="line">                            &amp;&amp; lastVisibleItemPosition == totalItemCount - <span class="number">1</span></div><div class="line">                            &amp;&amp; visibleItemCount &gt; <span class="number">0</span>) &#123;</div><div class="line">                        <span class="keyword">if</span> (bottomView == <span class="keyword">null</span> || isLoading || stateView != <span class="keyword">null</span>) <span class="keyword">return</span>;</div><div class="line"></div><div class="line">                        isLoading = <span class="keyword">true</span>;</div><div class="line">                        jcAdapter.notifyDataSetChanged();</div><div class="line">                        onLoadMoreListener.onLoadMore();</div><div class="line">                        scrollToPosition(jcAdapter.getItemCount() - <span class="number">1</span>);</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">findMaxPosition</span><span class="params">(<span class="keyword">int</span>[] positions)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> max = positions[<span class="number">0</span>];</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">1</span>; index &lt; positions.length; index++) &#123;</div><div class="line">            <span class="keyword">if</span> (positions[index] &gt; max) &#123;</div><div class="line">                max = positions[index];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> max;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBottomView</span><span class="params">(ViewGroup view)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (bottomView == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">this</span>.bottomView = view;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoading</span><span class="params">(<span class="keyword">boolean</span> flag)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!flag) &#123;</div><div class="line">            isLoading = <span class="keyword">false</span>;</div><div class="line">            jcAdapter.notifyDataSetChanged();</div><div class="line">            scrollToPosition(jcAdapter.getItemCount() - <span class="number">1</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAdSlotView</span><span class="params">(ViewGroup view)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (adSlotView == <span class="keyword">null</span>) &#123;</div><div class="line">            adSlotView = view;</div><div class="line">            <span class="keyword">if</span> (jcAdapter != <span class="keyword">null</span>) &#123;</div><div class="line">                jcAdapter.notifyItemInserted(<span class="number">0</span>);</div><div class="line">                scrollToPosition(<span class="number">0</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStateView</span><span class="params">(ViewGroup view)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (stateView != <span class="keyword">null</span>) <span class="keyword">return</span>;</div><div class="line">        <span class="keyword">if</span> (view == <span class="keyword">null</span>) <span class="keyword">return</span>;</div><div class="line">        <span class="keyword">if</span> (adSlotView != <span class="keyword">null</span>) &#123;</div><div class="line">            scrollToPosition(<span class="number">0</span>);</div><div class="line">            stateView = view;</div><div class="line">            Rect rect = <span class="keyword">new</span> Rect();</div><div class="line">            getGlobalVisibleRect(rect);</div><div class="line">            LinearLayout.LayoutParams layoutParams = <span class="keyword">new</span> LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, rect.bottom - rect.top - adSlotView.getHeight());</div><div class="line">            adSlotView.addView(stateView, layoutParams);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            showToast(<span class="string">"You should set the ad-slot view at first."</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeAdSlotView</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (adSlotView != <span class="keyword">null</span> &amp;&amp; jcAdapter != <span class="keyword">null</span>) &#123;</div><div class="line">            adSlotView = <span class="keyword">null</span>;</div><div class="line">            jcAdapter.notifyItemRemoved(<span class="number">0</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeStateView</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (adSlotView != <span class="keyword">null</span> &amp;&amp; stateView != <span class="keyword">null</span> &amp;&amp; jcAdapter != <span class="keyword">null</span>) &#123;</div><div class="line">            adSlotView.removeView(stateView);</div><div class="line">            stateView = <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAdapter</span><span class="params">(Adapter adapter)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.jcAdapter = <span class="keyword">new</span> JCAdapter(adapter);</div><div class="line">        <span class="keyword">super</span>.setAdapter(<span class="keyword">this</span>.jcAdapter);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JCRecyclerView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLayoutManager</span><span class="params">(LayoutManager layoutManager)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.layoutManager = layoutManager;</div><div class="line">        <span class="keyword">super</span>.setLayoutManager(layoutManager);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">JCAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RecyclerView</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">private</span> RecyclerView.Adapter adapter;</div><div class="line"></div><div class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_ADSLOT = <span class="number">0x10</span>;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_NORMAL = <span class="number">0x11</span>;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_BOTTOM = <span class="number">0x12</span>;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">JCAdapter</span><span class="params">(RecyclerView.Adapter adapter)</span> </span>&#123;</div><div class="line">            <span class="keyword">this</span>.adapter = adapter;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewAttachedToWindow</span><span class="params">(ViewHolder holder)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onViewAttachedToWindow(holder);</div><div class="line">            ViewGroup.LayoutParams layoutParams = holder.itemView.getLayoutParams();</div><div class="line">            <span class="keyword">if</span>(layoutParams != <span class="keyword">null</span>)&#123;</div><div class="line">                <span class="keyword">if</span>(adSlotView != <span class="keyword">null</span>) &#123;</div><div class="line">                    <span class="keyword">if</span>(layoutParams <span class="keyword">instanceof</span>  StaggeredGridLayoutManager.LayoutParams &amp;&amp; holder.getLayoutPosition() == <span class="number">0</span>)&#123;</div><div class="line">                        StaggeredGridLayoutManager.LayoutParams p = (StaggeredGridLayoutManager.LayoutParams) layoutParams;</div><div class="line">                        p.setFullSpan(<span class="keyword">true</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (bottomView != <span class="keyword">null</span> &amp;&amp; isLoading) &#123;</div><div class="line">                    <span class="keyword">if</span>(layoutParams <span class="keyword">instanceof</span>  StaggeredGridLayoutManager.LayoutParams &amp;&amp; holder.getLayoutPosition() == getItemCount() - <span class="number">1</span>)&#123;</div><div class="line">                        StaggeredGridLayoutManager.LayoutParams p = (StaggeredGridLayoutManager.LayoutParams) layoutParams;</div><div class="line">                        p.setFullSpan(<span class="keyword">true</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (layoutManager <span class="keyword">instanceof</span> GridLayoutManager) &#123;</div><div class="line">                <span class="keyword">final</span> GridLayoutManager gridManager = ((GridLayoutManager)</div><div class="line">                        layoutManager);</div><div class="line">                gridManager.setSpanSizeLookup(<span class="keyword">new</span> GridLayoutManager.SpanSizeLookup() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSpanSize</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">                        <span class="keyword">boolean</span> spanResult = <span class="keyword">false</span>;</div><div class="line">                        <span class="keyword">if</span>(adSlotView != <span class="keyword">null</span> &amp;&amp; bottomView != <span class="keyword">null</span>) &#123;</div><div class="line">                            <span class="keyword">if</span> (isLoading) &#123;</div><div class="line">                                spanResult = (position == <span class="number">0</span> || position == getItemCount() - <span class="number">1</span>);</div><div class="line">                            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                                spanResult = (position == <span class="number">0</span>);</div><div class="line">                            &#125;</div><div class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (adSlotView != <span class="keyword">null</span>) &#123;</div><div class="line">                            spanResult = (position==<span class="number">0</span>);</div><div class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bottomView != <span class="keyword">null</span> &amp;&amp; isLoading) &#123;</div><div class="line">                            spanResult = (position == getItemCount() - <span class="number">1</span>);</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        <span class="keyword">return</span> spanResult</div><div class="line">                                ? gridManager.getSpanCount():<span class="number">1</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (viewType == TYPE_ADSLOT) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">new</span> JCViewHolder(adSlotView);</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (viewType == TYPE_BOTTOM) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">new</span> JCViewHolder(bottomView);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">return</span> adapter.onCreateViewHolder(parent,viewType);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (getItemViewType(<span class="number">0</span>) == TYPE_ADSLOT) &#123;</div><div class="line">                <span class="keyword">if</span> (position == <span class="number">0</span>) <span class="keyword">return</span>;</div><div class="line">                <span class="keyword">int</span> newPosition = --position;</div><div class="line">                <span class="keyword">if</span> (adapter != <span class="keyword">null</span>) &#123;</div><div class="line">                    <span class="keyword">if</span> (newPosition &lt; adapter.getItemCount()) &#123;</div><div class="line">                        adapter.onBindViewHolder(holder, newPosition);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (getItemViewType(position) == TYPE_BOTTOM) &#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            adapter.onBindViewHolder(holder, position);</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">int</span> count = adapter.getItemCount();</div><div class="line">            <span class="keyword">if</span> (adSlotView != <span class="keyword">null</span>) &#123;</div><div class="line">                count ++;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (bottomView != <span class="keyword">null</span> &amp;&amp; isLoading) &#123;</div><div class="line">                count ++;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> count;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemViewType</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (position == <span class="number">0</span>) &#123;</div><div class="line">                <span class="keyword">return</span> adSlotView == <span class="keyword">null</span> ? TYPE_NORMAL : TYPE_ADSLOT;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == getItemCount() - <span class="number">1</span> &amp;&amp; isLoading) &#123;</div><div class="line">                <span class="keyword">return</span> bottomView == <span class="keyword">null</span> ? TYPE_NORMAL : TYPE_BOTTOM;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> TYPE_NORMAL;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">JCViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">JCViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(itemView);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showToast</span><span class="params">(String msg)</span> </span>&#123;</div><div class="line">        Toast.makeText(getContext(),msg,Toast.LENGTH_SHORT).show();</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnLoadMoreListener</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onLoadMore</span><span class="params">()</span></span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>200 多行代码，轻松实现 RecyclerView 刷新、加载以及异常状态的展示功能。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i2.muimg.com/588795/9485f3b972f5ed01.jpg&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;坚持就是进步&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;最近 Kotlin Androi
    
    </summary>
    
      <category term="Android" scheme="https://githubhaohao.github.io/categories/Android/"/>
    
    
      <category term="RecyclerView 加载与刷新" scheme="https://githubhaohao.github.io/tags/RecyclerView-%E5%8A%A0%E8%BD%BD%E4%B8%8E%E5%88%B7%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>Android jar 与 aar</title>
    <link href="https://githubhaohao.github.io/2017/04/01/Android-jar-%E4%B8%8E-aar/"/>
    <id>https://githubhaohao.github.io/2017/04/01/Android-jar-与-aar/</id>
    <published>2017-04-01T04:43:26.000Z</published>
    <updated>2017-04-01T05:53:30.887Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i4.buimg.com/588795/1372239da58c943a.jpg" alt="Cover"></p>
<p align="center">愚人节不愚人</p>

<blockquote><p>最近开始搞机器学习，同时项目也不停的维护着！嘿嘿，明天就是小长假了。</p>
</blockquote>
<h2 id="Android-jar-与-aar"><a href="#Android-jar-与-aar" class="headerlink" title="Android jar 与 aar"></a>Android jar 与 aar</h2><p><strong>jar</strong> (<strong>Java Application Resource</strong>) 是一种归档文件，以 ZIP 格式构建，以 .jar 为文件扩展名。用户可以使用JDK自带的 jar 命令创建或提取 JAR 文件。<strong>jar 文件只包含 class 文件和 配置文件。</strong></p>
<p><strong>aar</strong> (<strong>Android Application Resource</strong>) 是 android 中特有的归档文件，<strong>既包含 class 文件也包含 android 的 res 资源文件</strong>。</p>
<h2 id="Android-Studio-生成-jar-和-aar-文件"><a href="#Android-Studio-生成-jar-和-aar-文件" class="headerlink" title="Android Studio 生成 jar 和 aar 文件"></a>Android Studio 生成 jar 和 aar 文件</h2><h3 id="新建一个-Module"><a href="#新建一个-Module" class="headerlink" title="新建一个 Module"></a>新建一个 Module</h3><p>Android studio 菜单<strong> File -&gt; New -&gt; New Module -&gt; Android Module</strong> 。<br><img src="http://i4.buimg.com/588795/339c66823e3c881b.png" alt="new module"> </p>
<p>创建名为 mylibrary 的 module。</p>
<p><img src="http://i2.muimg.com/588795/afacc81c2031edea.png" alt="module"></p>
<p>在 mylibrary 下新建一个类 <strong>Person</strong> ,等会在 app module 下访问它。</p>
<p><img src="http://i4.buimg.com/588795/71501892d1d08bd4.png" alt="person"></p>
<h3 id="生成-jar-和-aar-文件"><a href="#生成-jar-和-aar-文件" class="headerlink" title="生成 jar 和 aar 文件"></a>生成 jar 和 aar 文件</h3><p>直接 Rebuild 或者运行 mylibrary task 如下图：<br><img src="http://i4.buimg.com/588795/88c5a8a24aca2790.png" alt="task"></p>
<p>Build Successful 之后可在下图的目录下找到 jar 和 arr 文件。<br><img src="http://i2.muimg.com/588795/76e1e131b84d17ec.png" alt="file"></p>
<p><img src="http://i2.muimg.com/588795/951d7279602acaad.png" alt="aar"></p>
<h3 id="引入-jar"><a href="#引入-jar" class="headerlink" title="引入 jar"></a>引入 jar</h3><ul>
<li>将 jar 文件拷贝到 app 的 lib 文件夹下；</li>
<li>右击 jar 文件，选择 <strong>Add As Library</strong> ，添加到 app module 下，然后 Android Studio 会自动编译。</li>
</ul>
<h3 id="引入-aar"><a href="#引入-aar" class="headerlink" title="引入 aar"></a>引入 aar</h3><ul>
<li>将 aar 文件拷贝到 app 的 lib 文件夹下 (可以修改 aar 文件名字，本例中修改为 mylibrary )；</li>
<li>修改 build.gradle 配置文件：<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">  ......</div><div class="line">  <span class="keyword">repositories</span> &#123;</div><div class="line">     <span class="keyword">flatDir</span> &#123;</div><div class="line">         dirs <span class="string">'libs'</span></div><div class="line">     &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    ......</div><div class="line">    <span class="keyword">compile</span>(name: <span class="string">'mylibrary'</span>, ext: <span class="string">'aar'</span>)</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>Async Project 大工告成。</p>
<p>同样，你也可以在其他工程中引入 jar 或 aar 文件。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i4.buimg.com/588795/1372239da58c943a.jpg&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;愚人节不愚人&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;最近开始搞机器学习，同时项目也不
    
    </summary>
    
      <category term="Android" scheme="https://githubhaohao.github.io/categories/Android/"/>
    
    
      <category term="jar aar" scheme="https://githubhaohao.github.io/tags/jar-aar/"/>
    
  </entry>
  
  <entry>
    <title>Android 四大组件之 Activity</title>
    <link href="https://githubhaohao.github.io/2017/03/01/Android-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6%E4%B9%8B-Activity/"/>
    <id>https://githubhaohao.github.io/2017/03/01/Android-四大组件之-Activity/</id>
    <published>2017-03-01T06:36:14.000Z</published>
    <updated>2017-04-17T01:17:54.401Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i2.buimg.com/588795/f44c5bdc30a8cc26.jpg" alt="Cover"></p>
<p align="center">唉！最近拖延症又犯了</p>

<blockquote><p>最近真的是越来越懒了，总是找各种理由不写博客。虽然最近各种事，又搞论文，又搞项目的，再拖下去实在是对不住 “不忘初心” 这一句话。惭愧！<br>虽然关于 Activity 已经被写烂了，但是从本篇文章里，你一定会发现不同的东西。</p>
</blockquote>
<h2 id="Activity-生命周期"><a href="#Activity-生命周期" class="headerlink" title="Activity 生命周期"></a>Activity 生命周期</h2><h3 id="一般情况下"><a href="#一般情况下" class="headerlink" title="一般情况下"></a>一般情况下</h3><p><img src="https://developer.android.com/images/activity_lifecycle.png" alt="haohaochang.cn"></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Activity</span> <span class="keyword">extends</span> <span class="title">ApplicationContext</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="异常情况下"><a href="#异常情况下" class="headerlink" title="异常情况下"></a>异常情况下</h3><h4 id="系统配置变化导致Activity销毁重建"><a href="#系统配置变化导致Activity销毁重建" class="headerlink" title="系统配置变化导致Activity销毁重建"></a>系统配置变化导致Activity销毁重建</h4><ol>
<li>旋转屏幕，Activity 销毁并重新创建，在异常情况下系统会在 onStop 之前调用 onSaveInstanceState 来保存状态。Activity 重新创建后，会在 onStart 之后调用 onRestoreInstanceState 恢复之前保存的数据。</li>
<li>系统只在 Activity 异常终止的时候才会调用 onSaveInstanceState 和 onRestoreInstanceState 方法。其他情况不会触发。</li>
</ol>
<h4 id="资源内存不足导致低优先级的-Activity-被回收"><a href="#资源内存不足导致低优先级的-Activity-被回收" class="headerlink" title="资源内存不足导致低优先级的 Activity 被回收"></a>资源内存不足导致低优先级的 Activity 被回收</h4><ol>
<li>前台- 可见非前台（被对话框遮挡的 Activity ）-后台，这三种 Activity 优先级从高到低。</li>
<li><code>android:configChanges=&quot;orientation&quot;</code> 在 manifest 中指定 configChanges 在系统配置变化后不重新创建 Activity，也不会执行onSaveInstanceState 和 onRestoreInstanceState 方法，而是调用 onConfigurationChnaged 方法。</li>
<li>configChanges 一般常用三个选项：<ul>
<li>locale <strong>系统语言变化</strong></li>
<li>keyborardHidden <strong>键盘的可访问性发生了变化，比如用户调出了键盘</strong></li>
<li>orientation <strong>屏幕方向变化</strong></li>
</ul>
</li>
</ol>
<h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><h4 id="首次启动-Activity"><a href="#首次启动-Activity" class="headerlink" title="首次启动 Activity"></a>首次启动 Activity</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">MainActivity</span> <span class="literal">on</span>Create</div><div class="line">MainActivity <span class="literal">on</span>Start</div><div class="line">MainActivity <span class="literal">on</span>Resume</div></pre></td></tr></table></figure>
<h4 id="跳转到-SecondActivity"><a href="#跳转到-SecondActivity" class="headerlink" title="跳转到 SecondActivity"></a>跳转到 SecondActivity</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">MainActivity</span> <span class="literal">on</span>Pause</div><div class="line">SecondActivity <span class="literal">on</span>Create</div><div class="line">SecondActivity <span class="literal">on</span>Start</div><div class="line">SecondActivity <span class="literal">on</span>Resume</div><div class="line">MainActivity <span class="literal">on</span>Stop</div></pre></td></tr></table></figure>
<h4 id="Back-返回-MainActivity"><a href="#Back-返回-MainActivity" class="headerlink" title="Back 返回 MainActivity"></a>Back 返回 MainActivity</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">SecondActivity</span> <span class="literal">on</span>Pause</div><div class="line">MainActivity <span class="literal">on</span>Restart</div><div class="line">MainActivity <span class="literal">on</span>Start</div><div class="line">MainActivity <span class="literal">on</span>Resume</div><div class="line">SecondActivity <span class="literal">on</span>Stop</div><div class="line">SecondActivity <span class="literal">on</span>Destroy</div></pre></td></tr></table></figure>
<h4 id="Home-回退桌面"><a href="#Home-回退桌面" class="headerlink" title="Home 回退桌面"></a>Home 回退桌面</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">MainActivity</span> <span class="literal">on</span>Pause</div><div class="line">MainActivity <span class="literal">on</span>Stop</div></pre></td></tr></table></figure>
<h4 id="桌面返回可见"><a href="#桌面返回可见" class="headerlink" title="桌面返回可见"></a>桌面返回可见</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">MainActivity</span> <span class="literal">on</span>Restart</div><div class="line">MainActivity <span class="literal">on</span>Start</div><div class="line">MainActivity <span class="literal">on</span>Resume</div></pre></td></tr></table></figure>
<h4 id="锁屏"><a href="#锁屏" class="headerlink" title="锁屏"></a>锁屏</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">MainActivity</span> <span class="literal">on</span>Pause</div><div class="line">MainActivity <span class="literal">on</span>Stop</div></pre></td></tr></table></figure>
<h4 id="解锁屏"><a href="#解锁屏" class="headerlink" title="解锁屏"></a>解锁屏</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">MainActivity</span> <span class="literal">on</span>Restart</div><div class="line">MainActivity <span class="literal">on</span>Start</div><div class="line">MainActivity <span class="literal">on</span>Resume</div></pre></td></tr></table></figure>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><blockquote><p>onStart 开始到 onStop 之前， Activity 可见。<br>onResume 开始到 onPause 之前， Activity 可接受用户交互。<br>在新Activity启动之前，栈顶的Activity需要先onPause后，新Activity才能启动。所以不能在onPause执行耗时操作。</p>
</blockquote>
<h2 id="Activity-数据传递"><a href="#Activity-数据传递" class="headerlink" title="Activity 数据传递"></a>Activity 数据传递</h2><p>Activity 传递数据一般有以下几种方式：</p>
<h3 id="Intent-传递数据"><a href="#Intent-传递数据" class="headerlink" title="Intent 传递数据"></a>Intent 传递数据</h3><p>MainActivity</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Intent intent=<span class="keyword">new</span> Intent();  </div><div class="line">intent.setClass(MainActivity.<span class="keyword">this</span>, OtherActivity.class);  </div><div class="line">Bundle bundle = <span class="keyword">new</span> Bundle();  </div><div class="line">bundle.putString(KEY, VALUE);</div><div class="line">intent.putExtras(bundle);  </div><div class="line">startActivity（intent）;</div></pre></td></tr></table></figure>
<p>OtherActivity</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Intent intent = getIntent();  </div><div class="line">Bundle bundle = intent.getEtras();  </div><div class="line">String value = bundle.getString(KEY);</div></pre></td></tr></table></figure>
<p>利用 Intent 对象在 Activity 之间传递数据是 Android 开发最常用的方式。<br>利用 Intent 对象可以传递基本数据类型，以及一些可序列化的对象。</p>
<h3 id="public-型的静态变量"><a href="#public-型的静态变量" class="headerlink" title="public 型的静态变量"></a>public 型的静态变量</h3><p>public 型的静态变量，在类被加载的时候，就被创建在静态存储区，不依赖于对象。</p>
<h3 id="Application-对象"><a href="#Application-对象" class="headerlink" title="Application 对象"></a>Application 对象</h3><p>在整个应用程序中就一个Application单例，它的生命周期贯穿整个程序，堆内存中只存在一个对象实例，所以程序内所有它的引用指向的是同一块堆内存，所以可以在不同activity对application实例变量进行值的存取。<br><em>不推荐</em>。</p>
<h3 id="Clipboard-剪切板"><a href="#Clipboard-剪切板" class="headerlink" title="Clipboard 剪切板"></a>Clipboard 剪切板</h3><p>ClipboardManager：该类是系统剪切板服务的接口，用来放入或取出全局剪切板中的文本。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ClipboardManager clipboardManager = (ClipboardManager)getSystemService(Context.CLIPBOARD_SERVICE);</div><div class="line"></div><div class="line">clipboardManager.setText(DATA.toString());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ClipboardManager clipboardManager = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);  </div><div class="line">String data = clipboardManager.getText().toString();</div></pre></td></tr></table></figure>
<p>Clipboard 也可以传递可序列化对象。</p>
<h3 id="文件传值"><a href="#文件传值" class="headerlink" title="文件传值"></a>文件传值</h3><p>通过向本地文件写入和读取来传递数据。<br>常用的如 SharedPrefrences 对象等。</p>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>你自己想吧！</p>
<h2 id="Activity-启动模式"><a href="#Activity-启动模式" class="headerlink" title="Activity 启动模式"></a>Activity 启动模式</h2><p>启动模式,简单地说就是 Activity 启动时的策略，在AndroidManifest.xml 中的标签的 android:launchMode 属性设置；</p>
<p>启动模式有4种，分别为 <strong>standard、singleTop、singleTask、singleInstance；</strong></p>
<h3 id="standard-模式"><a href="#standard-模式" class="headerlink" title="standard 模式"></a>standard 模式</h3><p>每次 startActivity 时，都创建 Activity 实例，并放入任务栈，该任务栈中，可以有多个同类 Activity 的实例。</p>
<p><strong>应用场景</strong>：Your idea。</p>
<h3 id="singleTop-模式"><a href="#singleTop-模式" class="headerlink" title="singleTop 模式"></a>singleTop 模式</h3><p>栈顶不是该类型的 Activity，则创建一个新的 Activity。否则，回调该  Activity 实例的 onNewIntent 方法。</p>
<p><strong>应用场景</strong>：接收通知消息启动的页面。</p>
<p>例如，对于推送比较频繁的应用，如果收到多个推送，每次都打开一个页面显示内容是不妥的。</p>
<h3 id="singleTask-模式"><a href="#singleTask-模式" class="headerlink" title="singleTask 模式"></a>singleTask 模式</h3><p>任务栈中不存在启动 Activity 的实例，则创建 Activity 放入任务栈。<br>否则，回调该 Activity 的 onNewIntent 方法，并将该 Activity 置于栈顶，其以上的 Activity 都被弹出 (pop)。<strong>[onNewIntent + clearTop]</strong></p>
<p><strong>应用场景</strong>：作为应用的入口点。</p>
<p>例如，对于浏览器的主界面，不管从多少个应用启动浏览器，只会启动主界面一次，其余情况都会走 onNewIntent ，并且会清空主界面上面的其他页面。</p>
<h3 id="singleInstance-模式"><a href="#singleInstance-模式" class="headerlink" title="singleInstance 模式"></a>singleInstance 模式</h3><p>回退栈中，只有这一个Activity，没有其他Activity。</p>
<p><strong>应用场景</strong>：闹铃的响铃界面。正在进行 QQ 聊天室时，闹铃响了，弹出一个对话形式的（以 SingleInstance 加载模式打开的）AlarmActivity，按了返回键之后回到 QQ 聊天界面，这是因为 Alarm Activity 所在的任务栈只有它一个元素， 因此退出之后这个任务栈空了。如果是以 SingleTask 打开 AlarmActivity，那么当闹铃响了的时候，按返回键应该进入闹铃设置界面。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i2.buimg.com/588795/f44c5bdc30a8cc26.jpg&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;唉！最近拖延症又犯了&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;最近真的是越来越懒了，总
    
    </summary>
    
      <category term="Android" scheme="https://githubhaohao.github.io/categories/Android/"/>
    
    
      <category term="Activity" scheme="https://githubhaohao.github.io/tags/Activity/"/>
    
  </entry>
  
  <entry>
    <title>Android主题切换和多主题实现</title>
    <link href="https://githubhaohao.github.io/2017/02/17/Android%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2%E5%92%8C%E5%A4%9A%E4%B8%BB%E9%A2%98%E5%AE%9E%E7%8E%B0/"/>
    <id>https://githubhaohao.github.io/2017/02/17/Android主题切换和多主题实现/</id>
    <published>2017-02-17T06:13:42.000Z</published>
    <updated>2017-02-17T13:48:53.485Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/multi-theme/giraffe-1959110__340.jpg?raw=true" alt="Cover"></p>
<p align="center">又是一个周末</p>

<h2 id="白天和夜间模式"><a href="#白天和夜间模式" class="headerlink" title="白天和夜间模式"></a>白天和夜间模式</h2><p>Android官方在Support包从23.2版本开始提供支持白天夜间模式的主题 Theme.AppCompat.DayNight，也就是 DayNight Mode ，轻松实现主体无缝切换。</p>
<p>Theme.AppCompat.DayNight 可以根据系统时间切换 Theme.AppCompat (暗色) 和 Theme.AppCompat.Light ( 亮色 ) 两种主题。这将大大提高了阅读类应用的用户体验 同时还支持 Material Design。</p>
<p><strong>需要注意的是</strong>，这个特性只支持 API v14 及以上的 Android 设备，在 API v14 以下的设备则会默认使用亮色的主题。</p>
<h3 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/multi-theme/multi_theme.gif?raw=true" alt="效果预览"></p>
<h3 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h3><h4 id="1-引入-support-v7-23-2-版本的依赖"><a href="#1-引入-support-v7-23-2-版本的依赖" class="headerlink" title="1. 引入 support-v7:23.2+ 版本的依赖"></a>1. 引入 support-v7:23.2+ 版本的依赖</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:25.1.1'</span></div></pre></td></tr></table></figure>
<p>为保证主题风格的统一，所有的 Activity 类应继承 AppCompatActivity 。</p>
<h4 id="2-自定义实现-DayNight-主题"><a href="#2-自定义实现-DayNight-主题" class="headerlink" title="2. 自定义实现 DayNight 主题"></a>2. 自定义实现 DayNight 主题</h4><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/multi-theme/res-night.png?raw=true" alt="res-night"></p>
<p>res 目录下新建 values-night 文件，拷贝修改 colors.xml 和 styles.xml 文件到 values-night，为 Night Model 下系统加载的 color资源，同样地也可以指定 Night Model 下加载的 drawable 资源在 drawable-night 文件夹中，同理 layout mipmap 资源加载也是如此。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"MyApp.DayNight.NoActionBar.Theme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.DayNight.NoActionBar"</span>&gt;</span><span class="xml"></span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimary"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimaryDark"</span>&gt;</span>@color/colorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorAccent"</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:textColorPrimary"</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p>具体位置颜色设置看图：</p>
<p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/multi-theme/screen.png?raw=true" alt="screen"></p>
<p>在 AndroidManifest.xml 中声明，单个 Activity 的主题。 </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">application</span></span></div><div class="line">    <span class="attr">android:name</span>=<span class="string">".MyApplication"</span></div><div class="line">    <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">    <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">    <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">".MainActivity"</span></div><div class="line">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">        <span class="attr">android:theme</span>=<span class="string">"@style/MyApp.DayNight.NoActionBar.Theme"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></div></pre></td></tr></table></figure>
<p>或者整个 App 的主题</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">application</span></span></div><div class="line">    <span class="attr">android:name</span>=<span class="string">".MyApplication"</span></div><div class="line">    <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">    <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">    <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:theme</span>=<span class="string">"@style/MyApp.DayNight.NoActionBar.Theme"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">".MainActivity"</span></div><div class="line">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">        &gt;</div><div class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="3-设置-DayNight-主题"><a href="#3-设置-DayNight-主题" class="headerlink" title="3 设置 DayNight 主题"></a>3 设置 DayNight 主题</h4><p>初始化主题:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initAppTheme</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (getThemeSharedPref().getBoolean(KEY_NIGHT_THEME, <span class="keyword">false</span>)) &#123;</div><div class="line">        getDelegate().setLocalNightMode(AppCompatDelegate.MODE_NIGHT_YES);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        getDelegate().setLocalNightMode(AppCompatDelegate.MODE_NIGHT_NO);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> SharedPreferences <span class="title">getThemeSharedPref</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> getSharedPreferences(<span class="string">"APP_THEME"</span>, Context.MODE_PRIVATE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>初始化主题应该在 <strong>super.onCreate() </strong> 之前执行，不然 Activity 会启动 2 次,下图为证：</p>
<p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/multi-theme/restart.png?raw=true" alt="restart"></p>
<p>切换主题：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (id == R.id.set_day_theme) &#123;</div><div class="line">    getDelegate().setLocalNightMode(AppCompatDelegate.MODE_NIGHT_NO);</div><div class="line">    getThemeSharedPref().edit().putBoolean(KEY_NIGHT_THEME,<span class="keyword">false</span>).apply();</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (id == R.id.set_night_theme) &#123;</div><div class="line">    getDelegate().setLocalNightMode(AppCompatDelegate.MODE_NIGHT_YES);</div><div class="line">    getThemeSharedPref().edit().putBoolean(KEY_NIGHT_THEME, <span class="keyword">true</span>).apply();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>切换主题会重启 Activity。</strong></p>
<p>DayNight Theme 有 4 种 Model ，分别是：</p>
<ul>
<li>MODE_NIGHT_NO. 使用 Day 主题</li>
<li>MODE_NIGHT_YES. 使用暗色 Night 主题</li>
<li>MODE_NIGHT_AUTO. 根据系统时间自动切换</li>
<li>MODE_NIGHT_FOLLOW_SYSTEM(默认选项). 设置为跟随系统</li>
</ul>
<h2 id="多主题实现"><a href="#多主题实现" class="headerlink" title="多主题实现"></a>多主题实现</h2><p>介绍几种换肤的第三方库。</p>
<h3 id="MultipleTheme"><a href="#MultipleTheme" class="headerlink" title="MultipleTheme"></a><a href="https://github.com/dersoncheng/MultipleTheme" target="_blank" rel="external">MultipleTheme</a></h3><blockquote><p>真正的支持无缝换肤／夜间模式的Android框架，配合theme和换肤控件框架可以做到无缝切换换肤（无需重启应用和当前页面）。</p>
<p>该应用框架可以实现无缝换肤／切换夜间模式的需求，需要在换肤／切换夜间模式的界面只需要使用框架里的自封装控件，其他界面的控件使用原生android控件即可。</p>
<footer><strong>MultipleTheme</strong></footer></blockquote>
<p><br><br><strong>缺陷</strong>：各种控件都需要重定义。<br><strong>优势</strong>：扩展性强，无需重启 Activity。</p>
<h3 id="Colorful-推荐"><a href="#Colorful-推荐" class="headerlink" title="Colorful [推荐]"></a><a href="https://github.com/garretyoder/Colorful" target="_blank" rel="external">Colorful</a> [推荐]</h3><blockquote><p>Colorful is a dynamic theme library allowing you to change your apps’ color schemes easily.</p>
<footer><strong>MultipleTheme</strong></footer></blockquote>
<p><br><br><strong>缺陷</strong>：主题颜色可定制性差，不支持 Material Design 风格。<br><strong>优势</strong>：使用方便。</p>
<h3 id="Prism"><a href="#Prism" class="headerlink" title="Prism"></a><a href="https://github.com/StylingAndroid/Prism" target="_blank" rel="external">Prism</a></h3><p><img src="https://blog.leancloud.cn/wp-content/uploads/2015/09/Android_Rainbow_All720-e1441357130150.jpg" alt="Prism"></p>
<p>Prism 下含有三个库：</p>
<ul>
<li>prsim 库含有一些核心功能；</li>
<li>prism-viewpager 库实现了核心库与 ViewPager 的对接；</li>
<li>prism-palette 库实现了核心库与 Palette 的对接。</li>
</ul>
<p>分成三个库是为了区分依赖条件：核心库不依赖外部条件，它能够很容易地添加到你的工程之中；但是 prism-viewpager 和 prism-palette 需要依赖相应的support库。所以当你的程序不使用这些依赖库时，你可以只使用 prism 库来省去不必要的依赖条件。不过当你的程序中使用了 ViewPager 时，即已经对相关的support库有了依赖，那么添加 prism-viewpager 库就不需要额外的依赖条件。</p>
<p><strong>但是，作者已停止更新。</strong></p>
<h3 id="Android-Skin-Loader-推荐"><a href="#Android-Skin-Loader-推荐" class="headerlink" title="Android-Skin-Loader [推荐]"></a><a href="https://github.com/fengjundev/Android-Skin-Loader" target="_blank" rel="external">Android-Skin-Loader</a> [推荐]</h3><p>看效果</p>
<p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/multi-theme/skin_loader.gif?raw=true" alt="skin-loader"></p>
<p>项目目录：</p>
<p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/multi-theme/skin.png?raw=true" alt="项目目录"></p>
<p>Android-Skin-Loader<br>├── android-skin-loader-lib      // 皮肤加载库<br>├── android-skin-loader-sample   // 皮肤库应用实例<br>├── android-skin-loader-skin     // 皮肤包生成demo<br>└── skin-package                 // 皮肤包输出目录</p>
<p>可以将皮肤文件打包分离，支持在线换肤，皮肤共享，不会重启 Activity 或 Fragment 。皮肤包（ 后缀名为.skin ）的本质是一个apk文件，该apk文件不包含代码，只包含资源文件。 </p>
<p><strong>缺陷</strong>：每个换肤的 View 都要设置 <code>skin:enable=&quot;true&quot;</code> 繁琐 ( 反正我感觉挺烦的 )，不支持 Material Design 风格。</p>
<p>不过，还好 <a href="https://github.com/burgessjp/ThemeSkinning" target="_blank" rel="external">ThemeSkinning</a> 进行了优化，支持 Material Design 和字体的切换。</p>
<p>示例：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/623504-0c8a0c72d3a173ed.gif?imageMogr2/auto-orient/strip" alt="sample"></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/githubhaohao/ImageRoom/blob/master/Images/multi-theme/giraffe-1959110__340.jpg?raw=true&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;p
    
    </summary>
    
      <category term="Android" scheme="https://githubhaohao.github.io/categories/Android/"/>
    
    
      <category term="Android主题切换" scheme="https://githubhaohao.github.io/tags/Android%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>MVVM，RxJava 和 Retrofit 的一次实践</title>
    <link href="https://githubhaohao.github.io/2017/02/12/MVVM%EF%BC%8CRxJava%E5%92%8CRetrofit%E7%9A%84%E4%B8%80%E6%AC%A1%E5%AE%9E%E8%B7%B5/"/>
    <id>https://githubhaohao.github.io/2017/02/12/MVVM，RxJava和Retrofit的一次实践/</id>
    <published>2017-02-12T06:21:25.000Z</published>
    <updated>2017-02-20T00:32:27.359Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/country-1295915__340.png?raw=true" alt="Cover"></p>
<p align="center">春节后的第一篇博客</p>

<blockquote><p>一次简单的实践作为对 MVVM 认识的总结。<br>原创文章，转载请注明出处:<a href="http://haohaochang.cn/2017/02/12/MVVM%EF%BC%8CRxJava%E5%92%8CRetrofit%E7%9A%84%E4%B8%80%E6%AC%A1%E5%AE%9E%E8%B7%B5/" target="_blank" rel="external">haohaochang.cn</a></p>
</blockquote>
<hr>
<h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="https://github.com/githubhaohao/MVVMRxJavaRetrofitSample/blob/master/image/sample.gif?raw=true" alt="result"></p>
<h2 id="准备知识"><a href="#准备知识" class="headerlink" title="准备知识"></a>准备知识</h2><h3 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/mvc.PNG?raw=true" alt="mvc"></p>
<ul>
<li><strong>视图层（View）</strong>：用户界面。</li>
<li><strong>控制器层（Controller）</strong>：业务逻辑</li>
<li><strong>模型层（Model）</strong>：数据保存</li>
</ul>
<hr>
<ol>
<li>View 层传送指令到 Controller 层</li>
<li>Controller 层完成业务逻辑后，要求 Model 层改变状态</li>
<li>Model 层将新的数据发送到 View层，使用户得到反馈</li>
</ol>
<p><strong>缺陷</strong>:View 层和 Model 层是相互可知，耦合性大，像 Activity 或者 Fragment 既在 Controller 层，又在 View 层，造成工程的可扩展性可维护性非常差。</p>
<h3 id="MVP"><a href="#MVP" class="headerlink" title="MVP"></a>MVP</h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/mvp.png?raw=true" alt="mvp"></p>
<p>在 MVP 设计模式中，Controller 层变成了 Presenter 层。</p>
<ol>
<li>MVP 模式各层之间的通信，都是双向的。</li>
<li>View 层与 Model 层不直接发生联系，都通过 Presenter 层进行间接通信。</li>
<li>Model 层与 Presenter 层，Presenter 层与 View 层之间通过接口建立联系。</li>
</ol>
<p>采用 MVP 设计模式，Activity 与 Fragment 只位于 View 层。</p>
<p><strong>MVP 的缺陷在于</strong>:由于我们使用了接口的方式去连接 View 层和  Presenter 层，这样就导致了特定场景下的一些问题，当你的页面逻辑很复杂的时候，你 View 层实现的接口会有很多，如果你的 App 中有很多个这样复杂的页面，维护接口的成本就会变的非常的大。</p>
<h3 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/mvvp.PNG?raw=true" alt="MVVM"></p>
<p>MVVM 模式将 Presenter 改名为 ViewModel，基本上与 MVP 模式完全一致。<br><strong>区别在于</strong>: View 层与 ViewModel 层通过<code>DataBinding</code>相互绑定，View 层的变动，自动反映在 ViewModel 层，反之亦然。</p>
<h3 id="RxJava"><a href="#RxJava" class="headerlink" title="RxJava"></a><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava</a></h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/kotlin-android-rxjava.png?raw=true" alt="RxJava"></p>
<blockquote><p>Rx 是微软 .Net 的一个响应式扩展，Rx 借助可观测的序列提供一种简单的方式来创建异步的，基于事件驱动的程序。2012 年 Netflix 为了应对不断增长的业务需求开始将 .NET Rx 迁移到 JVM 上面。并于 13 年二月份正式向外展示了 RxJava 。</p>
<p>从语义的角度来看， RxJava 就是 .NET Rx 。从语法的角度来看， Netflix 考虑到了对应每个 Rx 方法,保留了 Java 代码规范和基本的模式。</p>
</blockquote>
<p>RxJava 在 GitHub 主页的介绍是：</p>
<blockquote><p>RxJava is a Java VM implementation of Reactive Extensions: a library for composing asynchronous and event-based programs by using observable sequences.</p>
<footer><strong>RxJava</strong></footer></blockquote>
<p>一个在 Java VM 上使用可观测的序列来组成异步的、基于事件程序的库。</p>
<p>RxJava 本质上是一个异步操作库，是一个能让你用极其简洁的逻辑去处理繁琐复杂任务的异步事件库。</p>
<p>简而言之，RxJava 可以用几个关键字概括：<strong>简洁，队列化，异步</strong>。</p>
<h3 id="Retrofit"><a href="#Retrofit" class="headerlink" title="Retrofit"></a><a href="https://github.com/square/retrofit" target="_blank" rel="external">Retrofit</a></h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/android-libs-retrofit-1-638.jpg?raw=true" alt="retrofit"></p>
<p>一个 Android 和 Java 上 HTTP 库（利用注解和 OKHttp 来实现和服务器的数据交互）。</p>
<p>Retrofit 基于 OKHttp 并引入注解，使用简单，易扩展，易维护。</p>
<blockquote><p><a href="http://square.github.io/retrofit/" target="_blank" rel="external"><strong>Retrofit 官方文档:http://square.github.io/retrofit/</strong></a></p>
</blockquote>
<h3 id="DataBinding"><a href="#DataBinding" class="headerlink" title="DataBinding"></a><a href="https://developer.android.com/topic/libraries/data-binding/index.html" target="_blank" rel="external">DataBinding</a></h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/data_binding.png?raw=true" alt="data-binding"></p>
<p>在Google IO 2015 中，Google 在 support-v7 中新增了 Data Binding，使用 Data Binding可以直接在布局的 xml 中绑定布局与数据，从而简化代码，Android Data Binding是Android 的 MVVM 框架。因为 Data Binding 是包含在 support-v7 包里面的，所以可以向下兼容到最低 Android 2.1 (API level 7+).</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>直接上代码。</p>
<h3 id="依赖的第三方类库"><a href="#依赖的第三方类库" class="headerlink" title="依赖的第三方类库"></a>依赖的第三方类库</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">compile</span> <span class="string">'io.reactivex:rxjava:1.1.0'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'io.reactivex:rxandroid:1.1.0'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:retrofit:2.0.0-beta4'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:converter-gson:2.0.0-beta4'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'com.github.bumptech.glide:glide:3.7.0'</span></div></pre></td></tr></table></figure>
<h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><blockquote><p><code>https://api.douban.com/v2/movie/top250?start=0&amp;count=20</code></p>
</blockquote>
<h3 id="引入DataBinding"><a href="#引入DataBinding" class="headerlink" title="引入DataBinding"></a>引入DataBinding</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    ......</div><div class="line"></div><div class="line">    dataBinding &#123;</div><div class="line">        enabled = <span class="keyword">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="工程目录结构"><a href="#工程目录结构" class="headerlink" title="工程目录结构"></a>工程目录结构</h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/%E7%9B%AE%E5%BD%95.png?raw=true" alt="目录"></p>
<h3 id="MVVM-之-View"><a href="#MVVM-之-View" class="headerlink" title="MVVM 之 View"></a>MVVM 之 View</h3><p><strong>MainActivity.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getFragmentManager().beginTransaction().add(R.id.movie_fragment, MovieFragment.getInstance()).commit();</div></pre></td></tr></table></figure>
<p><strong>MovieFragment.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> <span class="keyword">implements</span> <span class="title">CompletedListener</span>,<span class="title">SwipeRefreshLayout</span>.<span class="title">OnRefreshListener</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String TAG = MovieFragment.class.getSimpleName();</div><div class="line">    <span class="keyword">private</span> MainViewModel viewModel;</div><div class="line">    <span class="keyword">private</span> MovieFragmentBinding movieFragmentBinding;</div><div class="line">    <span class="keyword">private</span> MovieAdapter movieAdapter;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MovieFragment <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MovieFragment();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        View contentView = inflater.inflate(R.layout.movie_fragment, container, <span class="keyword">false</span>);</div><div class="line">        movieFragmentBinding = MovieFragmentBinding.bind(contentView);</div><div class="line">        initData();</div><div class="line">        <span class="keyword">return</span> contentView;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">        movieAdapter = <span class="keyword">new</span> MovieAdapter();</div><div class="line">        movieFragmentBinding.recyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, <span class="keyword">false</span>));</div><div class="line">        movieFragmentBinding.recyclerView.setItemAnimator(<span class="keyword">new</span> DefaultItemAnimator());</div><div class="line">        movieFragmentBinding.recyclerView.setAdapter(movieAdapter);</div><div class="line">        movieFragmentBinding.swipeRefreshLayout.setColorSchemeResources(R.color.colorAccent, R.color.colorPrimary, R.color.colorPrimaryDark);</div><div class="line">        movieFragmentBinding.swipeRefreshLayout.setOnRefreshListener(<span class="keyword">this</span>);</div><div class="line">        viewModel = <span class="keyword">new</span> MainViewModel(movieAdapter,<span class="keyword">this</span>);</div><div class="line">        movieFragmentBinding.setViewModel(viewModel);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</div><div class="line">        movieAdapter.clearItems();</div><div class="line">        viewModel.refreshData();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (movieFragmentBinding.swipeRefreshLayout.isRefreshing()) &#123;</div><div class="line">            movieFragmentBinding.swipeRefreshLayout.setRefreshing(<span class="keyword">false</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>activity_main.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">".view.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- ... --&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">        <span class="attr">android:layout_marginTop</span>=<span class="string">"?attr/actionBarSize"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/movie_fragment"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- ... --&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>movie_fragment.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">variable</span></span></div><div class="line">            <span class="attr">name</span>=<span class="string">"viewModel"</span></div><div class="line">            <span class="attr">type</span>=<span class="string">"com.jc.mvvmrxjavaretrofitsample.viewModel.MainViewModel"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">android.support.v4.widget.SwipeRefreshLayout</span></span></div><div class="line">            <span class="attr">android:visibility</span>=<span class="string">"@&#123;viewModel.contentViewVisibility&#125;"</span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/swipe_refresh_layout"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#ddd"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:padding</span>=<span class="string">"8dp"</span>&gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></div><div class="line">            <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleLarge"</span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/progress_bar"</span></div><div class="line">            <span class="attr">android:visibility</span>=<span class="string">"@&#123;viewModel.progressBarVisibility&#125;"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/error_info_layout"</span></div><div class="line">            <span class="attr">android:visibility</span>=<span class="string">"@&#123;viewModel.errorInfoLayoutVisibility&#125;"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.exception&#125;"</span>/&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>movie_item.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">variable</span></span></div><div class="line">            <span class="attr">name</span>=<span class="string">"viewModel"</span></div><div class="line">            <span class="attr">type</span>=<span class="string">"com.jc.mvvmrxjavaretrofitsample.viewModel.MovieViewModel"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span></span></div><div class="line">        <span class="attr">xmlns:card_view</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/card_view"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">card_view:cardCornerRadius</span>=<span class="string">"4dp"</span></div><div class="line">        <span class="attr">card_view:cardBackgroundColor</span>=<span class="string">"@color/background"</span></div><div class="line">        <span class="attr">card_view:cardUseCompatPadding</span>=<span class="string">"true"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                <span class="attr">android:layout_margin</span>=<span class="string">"8dp"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></div><div class="line">                <span class="attr">android:src</span>=<span class="string">"@drawable/cover"</span></div><div class="line">                <span class="attr">app:imageUrl</span>=<span class="string">"@&#123;viewModel.imageUrl&#125;"</span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/cover"</span>/&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_margin</span>=<span class="string">"8dp"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:textColor</span>=<span class="string">"@android:color/black"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.title&#125;"</span></div><div class="line">                    <span class="attr">android:textSize</span>=<span class="string">"12sp"</span>/&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_marginTop</span>=<span class="string">"4dp"</span></div><div class="line">                    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line">                    <span class="tag">&lt;<span class="name">android.support.v7.widget.AppCompatRatingBar</span></span></div><div class="line">                        <span class="attr">android:id</span>=<span class="string">"@+id/ratingBar"</span></div><div class="line">                        <span class="attr">style</span>=<span class="string">"?android:attr/ratingBarStyleSmall"</span></div><div class="line">                        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                        <span class="attr">android:layout_gravity</span>=<span class="string">"center_vertical"</span></div><div class="line">                        <span class="attr">android:isIndicator</span>=<span class="string">"true"</span></div><div class="line">                        <span class="attr">android:max</span>=<span class="string">"10"</span></div><div class="line">                        <span class="attr">android:numStars</span>=<span class="string">"5"</span></div><div class="line">                        <span class="attr">android:rating</span>=<span class="string">"@&#123;viewModel.rating&#125;"</span> /&gt;</div><div class="line"></div><div class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                        <span class="attr">android:id</span>=<span class="string">"@+id/rating_text"</span></div><div class="line">                        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                        <span class="attr">android:layout_gravity</span>=<span class="string">"center_vertical"</span></div><div class="line">                        <span class="attr">android:layout_marginLeft</span>=<span class="string">"6dp"</span></div><div class="line">                        <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.ratingText&#125;"</span></div><div class="line">                        <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorSecondary"</span></div><div class="line">                        <span class="attr">android:textSize</span>=<span class="string">"10sp"</span> /&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorSecondary"</span></div><div class="line">                    <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></div><div class="line">                    <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.movieType&#125;"</span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/movie_type_text"</span></div><div class="line">                    <span class="attr">android:layout_marginTop</span>=<span class="string">"6dp"</span></div><div class="line">                    /&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorSecondary"</span></div><div class="line">                    <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></div><div class="line">                    <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.year&#125;"</span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/year_text"</span></div><div class="line">                    <span class="attr">android:layout_marginTop</span>=<span class="string">"6dp"</span></div><div class="line">                    /&gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>MovieAdapter.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">MovieAdapter</span>.<span class="title">BindingHolder</span>&gt; </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;Movie&gt; movies;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MovieAdapter</span><span class="params">()</span> </span>&#123;</div><div class="line">        movies = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> BindingHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">        MovieItemBinding itemBinding = DataBindingUtil.inflate(LayoutInflater.from(parent.getContext()), R.layout.movie_item, parent, <span class="keyword">false</span>);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BindingHolder(itemBinding);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(BindingHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        MovieViewModel movieViewModel = <span class="keyword">new</span> MovieViewModel(movies.get(position));</div><div class="line">        holder.itemBinding.setViewModel(movieViewModel);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movies.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(Movie movie)</span> </span>&#123;</div><div class="line">        movies.add(movie);</div><div class="line">        notifyItemInserted(movies.size() - <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearItems</span><span class="params">()</span> </span>&#123;</div><div class="line">        movies.clear();</div><div class="line">        notifyDataSetChanged();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">BindingHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> MovieItemBinding itemBinding;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">BindingHolder</span><span class="params">(MovieItemBinding itemBinding)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(itemBinding.cardView);</div><div class="line">            <span class="keyword">this</span>.itemBinding = itemBinding;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>回调接口<strong> CompletedListener.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CompletedListener</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="MVVM-之-ViewModel"><a href="#MVVM-之-ViewModel" class="headerlink" title="MVVM 之 ViewModel"></a>MVVM 之 ViewModel</h3><p><strong>MainViewModel.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainViewModel</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> ObservableField&lt;Integer&gt; contentViewVisibility;</div><div class="line">    <span class="keyword">public</span> ObservableField&lt;Integer&gt; progressBarVisibility;</div><div class="line">    <span class="keyword">public</span> ObservableField&lt;Integer&gt; errorInfoLayoutVisibility;</div><div class="line">    <span class="keyword">public</span> ObservableField&lt;String&gt; exception;</div><div class="line">    <span class="keyword">private</span> Subscriber&lt;Movie&gt; subscriber;</div><div class="line">    <span class="keyword">private</span> MovieAdapter movieAdapter;</div><div class="line">    <span class="keyword">private</span> CompletedListener completedListener;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainViewModel</span><span class="params">(MovieAdapter movieAdapter,CompletedListener completedListener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.movieAdapter = movieAdapter;</div><div class="line">        <span class="keyword">this</span>.completedListener = completedListener;</div><div class="line">        initData();</div><div class="line">        getMovies();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getMovies</span><span class="params">()</span> </span>&#123;</div><div class="line">        subscriber = <span class="keyword">new</span> Subscriber&lt;Movie&gt;() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</div><div class="line">                Log.d(<span class="string">"[MainViewModel]"</span>, <span class="string">"onCompleted"</span>);</div><div class="line">                hideAll();</div><div class="line">                contentViewVisibility.set(View.VISIBLE);</div><div class="line">                completedListener.onCompleted();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</div><div class="line">                hideAll();</div><div class="line">                errorInfoLayoutVisibility.set(View.VISIBLE);</div><div class="line">                exception.set(e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(Movie movie)</span> </span>&#123;</div><div class="line">                movieAdapter.addItem(movie);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        RetrofitHelper.getInstance().getMovies(subscriber, <span class="number">0</span>, <span class="number">20</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refreshData</span><span class="params">()</span> </span>&#123;</div><div class="line">        getMovies();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">        contentViewVisibility = <span class="keyword">new</span> ObservableField&lt;&gt;();</div><div class="line">        progressBarVisibility = <span class="keyword">new</span> ObservableField&lt;&gt;();</div><div class="line">        errorInfoLayoutVisibility = <span class="keyword">new</span> ObservableField&lt;&gt;();</div><div class="line">        exception = <span class="keyword">new</span> ObservableField&lt;&gt;();</div><div class="line">        contentViewVisibility.set(View.GONE);</div><div class="line">        errorInfoLayoutVisibility.set(View.GONE);</div><div class="line">        progressBarVisibility.set(View.VISIBLE);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">hideAll</span><span class="params">()</span></span>&#123;</div><div class="line">        contentViewVisibility.set(View.GONE);</div><div class="line">        errorInfoLayoutVisibility.set(View.GONE);</div><div class="line">        progressBarVisibility.set(View.GONE);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>MovieViewModel.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieViewModel</span> <span class="keyword">extends</span> <span class="title">BaseObservable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Movie movie;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MovieViewModel</span><span class="params">(Movie movie)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.movie = movie;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCoverUrl</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getImages().getSmall();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getTitle();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getRating</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getRating().getAverage();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRatingText</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> String.valueOf(movie.getRating().getAverage());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getYear</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getYear();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMovieType</span><span class="params">()</span> </span>&#123;</div><div class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</div><div class="line">        <span class="keyword">for</span> (String s : movie.getGenres()) &#123;</div><div class="line">            builder.append(s + <span class="string">" "</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> builder.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getImageUrl</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getImages().getSmall();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@BindingAdapter</span>(&#123;<span class="string">"app:imageUrl"</span>&#125;)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(ImageView imageView,String url)</span> </span>&#123;</div><div class="line">        Glide.with(imageView.getContext())</div><div class="line">                .load(url)</div><div class="line">                .placeholder(R.drawable.cover)</div><div class="line">                .error(R.drawable.cover)</div><div class="line">                .into(imageView);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="MVVM-之-Model"><a href="#MVVM-之-Model" class="headerlink" title="MVVM 之 Model"></a>MVVM 之 Model</h3><p><strong>DouBanMovieService.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DouBanMovieService</span> </span>&#123;</div><div class="line">    String BASE_URL = <span class="string">"https://api.douban.com/v2/movie/"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@GET</span>(<span class="string">"top250"</span>)</div><div class="line">    Observable&lt;Response&lt;List&lt;Movie&gt;&gt;&gt; getMovies(<span class="meta">@Query</span>(<span class="string">"start"</span>) <span class="keyword">int</span> start, <span class="meta">@Query</span>(<span class="string">"count"</span>) <span class="keyword">int</span> count);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>RetrofitHelper.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RetrofitHelper</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_TIMEOUT = <span class="number">10</span>;</div><div class="line">    <span class="keyword">private</span> Retrofit retrofit;</div><div class="line">    <span class="keyword">private</span> DouBanMovieService movieService;</div><div class="line">    OkHttpClient.Builder builder;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获取RetrofitHelper对象的单例</div><div class="line">     * */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> RetrofitHelper INSTANCE = <span class="keyword">new</span> RetrofitHelper();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RetrofitHelper <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> Singleton.INSTANCE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RetrofitHelper</span><span class="params">()</span> </span>&#123;</div><div class="line">        builder = <span class="keyword">new</span> OkHttpClient.Builder();</div><div class="line">        builder.connectTimeout(DEFAULT_TIMEOUT, TimeUnit.SECONDS);</div><div class="line"></div><div class="line">        retrofit = <span class="keyword">new</span> Retrofit.Builder()</div><div class="line">                .client(builder.build())</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .baseUrl(DouBanMovieService.BASE_URL)</div><div class="line">                .build();</div><div class="line">        movieService = retrofit.create(DouBanMovieService.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMovies</span><span class="params">(Subscriber&lt;Movie&gt; subscriber, <span class="keyword">int</span> start, <span class="keyword">int</span> count)</span> </span>&#123;</div><div class="line">        movieService.getMovies(start, count)</div><div class="line">                .map(<span class="keyword">new</span> Func1&lt;Response&lt;List&lt;Movie&gt;&gt;, List&lt;Movie&gt;&gt;() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> List&lt;Movie&gt; <span class="title">call</span><span class="params">(Response&lt;List&lt;Movie&gt;&gt; listResponse)</span> </span>&#123;</div><div class="line">                        <span class="keyword">return</span> listResponse.getSubjects();</div><div class="line">                    &#125;</div><div class="line">                &#125;)</div><div class="line">                .flatMap(<span class="keyword">new</span> Func1&lt;List&lt;Movie&gt;, Observable&lt;Movie&gt;&gt;() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> Observable&lt;Movie&gt; <span class="title">call</span><span class="params">(List&lt;Movie&gt; movies)</span> </span>&#123;</div><div class="line">                        <span class="keyword">return</span> Observable.from(movies);</div><div class="line">                    &#125;</div><div class="line">                &#125;)</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(subscriber);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>还有 entity 类，这里就不贴出来了。</p>
<blockquote><p>详细源码：<a href="https://github.com/githubhaohao/MVVMRxJavaRetrofitSample" target="_blank" rel="external">https://github.com/githubhaohao/MVVMRxJavaRetrofitSample</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/githubhaohao/ImageRoom/blob/master/Images/country-1295915__340.png?raw=true&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;p align=&quot;cent
    
    </summary>
    
      <category term="Android" scheme="https://githubhaohao.github.io/categories/Android/"/>
    
    
      <category term="MVVM" scheme="https://githubhaohao.github.io/tags/MVVM/"/>
    
  </entry>
  
  <entry>
    <title>ES6入门: 需要掌握的基本语法</title>
    <link href="https://githubhaohao.github.io/2017/01/25/ES6%E5%85%A5%E9%97%A8-%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://githubhaohao.github.io/2017/01/25/ES6入门-需要掌握的基本语法/</id>
    <published>2017-01-25T14:26:31.000Z</published>
    <updated>2017-01-30T09:52:18.135Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/es6.jpg?raw=true" alt=""></p>
<h2 id="ES6是什么"><a href="#ES6是什么" class="headerlink" title="ES6是什么"></a>ES6是什么</h2><h3 id="1-ES-ECMAScript-和JavaScript的关系"><a href="#1-ES-ECMAScript-和JavaScript的关系" class="headerlink" title="1. ES (ECMAScript) 和JavaScript的关系"></a>1. ES (ECMAScript) 和JavaScript的关系</h3><blockquote><p>ECMAScript和JavaScript的关系是，前者是后者的规格，后者是前者的一种实现（另外的ECMAScript方言还有Jscript和ActionScript）。日常场合，这两个词是可以互换的。</p>
<footer><strong>阮一峰</strong><cite>ECMAScript</cite></footer></blockquote>
<h3 id="2-ES6和ECMAScript-2015的关系"><a href="#2-ES6和ECMAScript-2015的关系" class="headerlink" title="2. ES6和ECMAScript 2015的关系"></a>2. ES6和ECMAScript 2015的关系</h3><p>ES6，一般是指ECMAScript 2015标准，但有时也表示一种泛指，是指JavaScript语言的下一代标准。涵盖了ECMAScript 2015，2016，2017等版本，而ECMAScript 2015则是正式名称，特指该年发布的正式版本的语言标准。</p>
<h2 id="Babel转码器"><a href="#Babel转码器" class="headerlink" title="Babel转码器"></a><a href="http://babeljs.io/docs/setup/" target="_blank" rel="external">Babel转码器</a></h2><p><img src="https://github.com/githubhaohao/TinkerSample/blob/master/image/babel.png?raw=true" alt=""></p>
<p>Babel是一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行。去<a href="http://babeljs.io/docs/setup/" target="_blank" rel="external">官网</a>选择自己习惯的工具来使用使用Babel吧！</p>
<h2 id="let和const命令"><a href="#let和const命令" class="headerlink" title="let和const命令"></a>let和const命令</h2><p>let和const与var类似都是用来声明变量的，但又有各自不同的用途。let与var对比，看代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> name = <span class="string">'haohao'</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="literal">true</span>)&#123;</div><div class="line">  <span class="keyword">var</span> name = <span class="string">'jack'</span>;</div><div class="line">  <span class="built_in">console</span>.log(name)  <span class="comment">//jack</span></div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="built_in">console</span>.log(name)  <span class="comment">//jack</span></div></pre></td></tr></table></figure>
<p>ES5只有全局作用域和块级作用域，导致内层变量覆盖外层变量，使得两次输出的都是<code>jack</code>。而let为JS新增了块级作用域，因此它声明的变量只在let命令所在的代码块有效，具体看代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> name = <span class="string">'haohao'</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="literal">true</span>)&#123;</div><div class="line">  <span class="keyword">let</span> name = <span class="string">'jack'</span>;</div><div class="line">  <span class="built_in">console</span>.log(name)  <span class="comment">//jack</span></div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="built_in">console</span>.log(name)  <span class="comment">//haohao</span></div></pre></td></tr></table></figure>
<p>const用来声明常量，一旦声明就不能改变。当我们尝试改变const声明的常量时，浏览器就会报错。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> PI = <span class="built_in">Math</span>.PI</div><div class="line"> </div><div class="line">PI = <span class="number">23</span> <span class="comment">//Module build failed: SyntaxError: /es6/app.js: "PI" is read-only</span></div></pre></td></tr></table></figure>
<p>引用其他Module中声明的变量，用const来声明可以避免对其重命名而导致出现BUG。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> &#123;width, height&#125; = <span class="built_in">window</span>.get(<span class="string">'Dimension'</span>);</div></pre></td></tr></table></figure>
<h2 id="解构-Destructuring"><a href="#解构-Destructuring" class="headerlink" title="解构 (Destructuring)"></a>解构 (Destructuring)</h2><p><strong>解构</strong> (Destructuring) 是指按照某种模式，从对象或数组中提取值对指定的变量进行赋值。</p>
<p>ES6之前为变量赋值：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> name = <span class="string">'jack'</span>;</div><div class="line"><span class="keyword">let</span> addr = <span class="string">'cn'</span>;</div><div class="line"><span class="keyword">let</span> sex = <span class="string">'male'</span>;</div></pre></td></tr></table></figure>
<p>ES6可以这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> [name,addr,sex] = [<span class="string">'jack'</span>,<span class="string">'cn'</span>,<span class="string">'male'</span>];</div><div class="line"></div><div class="line">name <span class="comment">//jack</span></div><div class="line">addr <span class="comment">//cn</span></div><div class="line">sex  <span class="comment">//male</span></div></pre></td></tr></table></figure>
<p>默认值:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> [name,addr,sex = <span class="string">'male'</span>] = [<span class="string">'jack'</span>,<span class="string">'cn'</span>];</div><div class="line"></div><div class="line">name <span class="comment">//jack</span></div><div class="line">addr <span class="comment">//cn</span></div><div class="line">sex  <span class="comment">//male</span></div></pre></td></tr></table></figure>
<p>关于对象以前这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> name = <span class="string">'jack'</span>;</div><div class="line"><span class="keyword">let</span> addr = <span class="string">'cn'</span>;</div><div class="line"><span class="keyword">let</span> sex = <span class="string">'male'</span>;</div><div class="line"><span class="keyword">let</span> student = &#123; <span class="attr">name</span>:name, <span class="attr">addr</span>:addr, <span class="attr">sex</span>:sex &#125;</div><div class="line"><span class="built_in">console</span>.log(student);</div><div class="line"></div><div class="line"><span class="comment">//Object &#123; name:'jack', addr:'cn', sex:'male' &#125;</span></div></pre></td></tr></table></figure>
<p>ES6可以这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> name = <span class="string">'jack'</span>;</div><div class="line"><span class="keyword">let</span> addr = <span class="string">'cn'</span>;</div><div class="line"><span class="keyword">let</span> sex = <span class="string">'male'</span>;</div><div class="line"><span class="keyword">let</span> student = &#123; name, addr, sex &#125;</div><div class="line"><span class="built_in">console</span>.log(student);</div><div class="line"></div><div class="line"><span class="comment">//Object &#123; name:'jack', addr:'cn', sex:'male' &#125;</span></div></pre></td></tr></table></figure>
<p>还有这样:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> student = &#123; <span class="attr">name</span>:<span class="string">'kene'</span>, <span class="attr">addr</span>:<span class="string">'us'</span>, <span class="attr">sex</span>:<span class="string">'male'</span> &#125;</div><div class="line"><span class="keyword">let</span> &#123; name, sex &#125; = student;</div><div class="line"><span class="keyword">let</span> &#123; addr &#125; = student;</div><div class="line"><span class="built_in">console</span>.log(name, addr, sex);</div><div class="line"></div><div class="line"><span class="comment">//kene us male</span></div></pre></td></tr></table></figure>
<h2 id="模板字符串-template-string"><a href="#模板字符串-template-string" class="headerlink" title="模板字符串 (template string)"></a>模板字符串 (template string)</h2><p>传统模板字符串：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#showId'</span>).append(</div><div class="line">  <span class="string">"Hello，everyone!"</span> +</div><div class="line">  <span class="string">"I am Jack."</span>+</div><div class="line">  <span class="string">"I like eat "</span> + fruits + <span class="string">"!"</span> </div><div class="line">);</div></pre></td></tr></table></figure>
<p>ES6模板字符串：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#showId'</span>).append(<span class="string">`</span></div><div class="line">  Hello，everyone!</div><div class="line">  I am Jack.</div><div class="line">  I like eat <span class="subst">$&#123;fruits&#125;</span>! </div><div class="line">`);</div></pre></td></tr></table></figure>
<p>反引号标识起始，<code>${}</code>引入变量，所有的空格缩进保存输出。</p>
<h2 id="箭头函数-arrow-functions"><a href="#箭头函数-arrow-functions" class="headerlink" title="箭头函数 (arrow functions)"></a>箭头函数 (arrow functions)</h2><p>ES6允许使用“箭头”（=&gt;）定义函数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> func = <span class="function"><span class="params">i</span> =&gt;</span> i + <span class="number">1</span>;</div><div class="line"><span class="keyword">var</span> func = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;a++; b++; <span class="keyword">return</span> a + b;&#125;</div></pre></td></tr></table></figure>
<p>上面的箭头函数等同于：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> func = <span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> i + <span class="number">1</span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> func = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">  a++;</div><div class="line">  b++;</div><div class="line">  <span class="keyword">return</span> a + b;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当我们使用箭头函数时，函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。并不是因为箭头函数内部有绑定this的机制，实际原因是箭头函数根本没有自己的this，它的this是继承外面的，因此内部的this就是外层代码块的this。有一种使用场景：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>()&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'person'</span>;</div><div class="line">  &#125;</div><div class="line">  sayHello()&#123;</div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">'says hello.'</span>);</div><div class="line">  &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person();</div><div class="line">p.sayHello();</div><div class="line"></div><div class="line"><span class="comment">//undefined says hello.</span></div></pre></td></tr></table></figure>
<p>运行上面的代码会报错，这是因为setTimeout中的this指向的是全局对象。有了箭头函数上述问题便可迎刃而解：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>()&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'person'</span>;</div><div class="line">  &#125;</div><div class="line">  sayHello()&#123;</div><div class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">'says hello.'</span>);</div><div class="line">  &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person();</div><div class="line">p.sayHello();</div><div class="line"></div><div class="line"><span class="comment">//person says hello.</span></div></pre></td></tr></table></figure>
<h2 id="类-Class"><a href="#类-Class" class="headerlink" title="类 (Class)"></a>类 (Class)</h2><p>ES6提供了更接近传统语言的写法，引入了Class（类）这个概念。新的class写法让对象原型的写法更加清晰、更像面向对象编程的语法，也更加通俗易懂。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>()&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'person'</span>;</div><div class="line">  &#125;</div><div class="line">  sayHello()&#123;</div><div class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">'says hello.'</span>);</div><div class="line">  &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person();</div><div class="line">p.sayHello();</div><div class="line"></div><div class="line"><span class="comment">//person says hello.</span></div></pre></td></tr></table></figure>
<p>上面代码首先用class定义了一个“类”，可以看到里面有一个constructor方法，这就是构造方法，而this关键字则代表实例对象。简单地说，constructor内定义的方法和属性是实例对象自己的，而constructor外定义的方法和属性则是所有实例对象可以共享的。</p>
<p>ES6的继承机制，实质是先创造父类的实例对象this（所以必须先调用super方法），然后再用子类的构造函数修改this。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>()&#123;</div><div class="line">    <span class="keyword">super</span>();</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'student'</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> s = <span class="keyword">new</span> Student();</div><div class="line">s.sayHello();</div><div class="line"></div><div class="line"><span class="comment">//student says hello.</span></div></pre></td></tr></table></figure>
<p>上面定义了一个Student类，该类通过extends关键字，继承了Person类的所有属性和方法。</p>
<p>子类Student必须在constructor方法中调用super方法，否则新建实例时会报错,子类就得不到this对象。这是因为子类没有自己的this对象，而是继承父类的this对象，然后对其进行加工。</p>
<h2 id="export和import"><a href="#export和import" class="headerlink" title="export和import"></a>export和import</h2><p>ES6的模块化功能。<br>以前这样写：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="built_in">module</span>.exports = <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">var</span> fruits = <span class="built_in">require</span>(<span class="string">'./content.js'</span>);</div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"></div><div class="line"><span class="comment">//apple</span></div></pre></td></tr></table></figure>
<p>ES6这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">import</span> fruits <span class="keyword">from</span> <span class="string">'./content.js'</span>;</div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"></div><div class="line"><span class="comment">//apple</span></div></pre></td></tr></table></figure>
<p>深入点，看代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> KIND = <span class="string">'Thailand Apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="string">'I like apple!'</span>;</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">import</span> fruits, &#123; say, KIND &#125;  <span class="keyword">from</span> <span class="string">'./content.js'</span>;</div><div class="line"><span class="comment">//如果只导入say //import &#123; say &#125;  from './content.js';</span></div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"><span class="built_in">console</span>.log(KIND);</div><div class="line">say();</div><div class="line"></div><div class="line"><span class="comment">//apple </span></div><div class="line"><span class="comment">//Thailand Apple</span></div><div class="line"><span class="comment">//I like apple!</span></div></pre></td></tr></table></figure>
<p>修改变量名。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> KIND = <span class="string">'Thailand Apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="string">'I like apple!'</span>;</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">import</span> fruits, &#123; say, KIND <span class="keyword">as</span> type &#125;  <span class="keyword">from</span> <span class="string">'./content.js'</span>;</div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"><span class="built_in">console</span>.log(type);</div><div class="line">say();</div><div class="line"></div><div class="line"><span class="comment">//apple </span></div><div class="line"><span class="comment">//Thailand Apple</span></div><div class="line"><span class="comment">//I like apple!</span></div></pre></td></tr></table></figure>
<p>整体加载,*为指定的一个对象。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> KIND = <span class="string">'Thailand Apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="string">'I like apple!'</span>;</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">import</span> fruits, * <span class="keyword">as</span> content <span class="keyword">from</span> <span class="string">'./content.js'</span>;</div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"><span class="built_in">console</span>.log(content.type);</div><div class="line">content.say();</div><div class="line"></div><div class="line"><span class="comment">//apple </span></div><div class="line"><span class="comment">//Thailand Apple</span></div><div class="line"><span class="comment">//I like apple!</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/githubhaohao/ImageRoom/blob/master/Images/es6.jpg?raw=true&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ES6是什么&quot;&gt;&lt;a href=&quot;#ES6是什么&quot; cl
    
    </summary>
    
      <category term="ES6" scheme="https://githubhaohao.github.io/categories/ES6/"/>
    
    
      <category term="ES6入门" scheme="https://githubhaohao.github.io/tags/ES6%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>分分钟接入Tinker</title>
    <link href="https://githubhaohao.github.io/2017/01/18/%E5%88%86%E5%88%86%E9%92%9F%E6%8E%A5%E5%85%A5Tinker/"/>
    <id>https://githubhaohao.github.io/2017/01/18/分分钟接入Tinker/</id>
    <published>2017-01-18T01:23:38.000Z</published>
    <updated>2017-01-18T02:51:40.837Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tinker是什么"><a href="#Tinker是什么" class="headerlink" title="Tinker是什么"></a><a href="https://github.com/Tencent/tinker" target="_blank" rel="external">Tinker</a>是什么</h2><blockquote><p>Tinker是微信官方的Android热补丁解决方案，它支持动态下发代码、So库以及资源，让应用能够在不需要重新安装的情况下实现更新。当然，你也可以使用Tinker来更新你的插件。<br>它主要包括以下几个部分：</p>
<ul>
<li>1.gradle编译插件: tinker-patch-gradle-plugin</li>
<li>2.核心sdk库: tinker-android-lib</li>
<li>3.非gradle编译用户的命令行版本: tinker-patch-cli.jar</li>
</ul>
<footer><strong>Tencent</strong><cite>tinker</cite></footer></blockquote>
<p><br><br><img src="https://github.com/Tencent/tinker/raw/master/assets/tinker.png" alt="Tinker"></p>
<h2 id="引入依赖和插件"><a href="#引入依赖和插件" class="headerlink" title="引入依赖和插件"></a>引入依赖和插件</h2><p>在你项目根目录下的 <code>build.gradle</code> 文件中添加:</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">buildscript</span> &#123;</div><div class="line">    <span class="keyword">dependencies</span> &#123;</div><div class="line">        <span class="keyword">classpath</span> (<span class="string">'com.tencent.tinker:tinker-patch-gradle-plugin:1.7.6'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在 <code>app/build.gradle</code> 文件中添加依赖和插件：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    <span class="comment">//optional, help to generate the final application </span></div><div class="line">    provided(<span class="string">'com.tencent.tinker:tinker-android-anno:1.7.6'</span>)</div><div class="line">    <span class="comment">//tinker's main Android lib</span></div><div class="line">    <span class="keyword">compile</span>(<span class="string">'com.tencent.tinker:tinker-android-lib:1.7.6'</span>) </div><div class="line">    <span class="keyword">compile</span> <span class="string">"com.android.support:multidex:1.0.1"</span></div><div class="line">&#125;</div><div class="line">...</div><div class="line"></div><div class="line">...</div><div class="line">apply plugin: <span class="string">'com.tencent.tinker.patch'</span></div></pre></td></tr></table></figure>
<h2 id="添加task"><a href="#添加task" class="headerlink" title="添加task"></a>添加task</h2><p>添加task <code>tinkerPatch</code> 在 <code>app/build.gradle</code> 文件中,其中 <code>oldApk</code> 路径为出现BUG的APK路径（自定义），添加完之后Async Project。</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">tinkerPatch &#123;</div><div class="line"></div><div class="line">    oldApk = <span class="string">"J://tinkerSample/app-debug.apk"</span></div><div class="line">    ignoreWarning = <span class="keyword">true</span></div><div class="line">    useSign = <span class="keyword">true</span></div><div class="line">    buildConfig &#123;</div><div class="line">        applyMapping = <span class="keyword">null</span></div><div class="line">        applyResourceMapping = <span class="keyword">null</span></div><div class="line">        tinkerId = <span class="string">"tinkerId"</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    dex &#123;</div><div class="line">        dexMode = <span class="string">"jar"</span></div><div class="line">        usePreGeneratedPatchDex = <span class="keyword">false</span></div><div class="line">        pattern = [<span class="string">"classes*.dex"</span>,</div><div class="line">                   <span class="string">"assets/secondary-dex-?.jar"</span>]</div><div class="line">        loader = [<span class="string">"com.tencent.tinker.loader.*"</span>,</div><div class="line">                  <span class="string">"com.jc.tinkersample.SimpleApp"</span>,</div><div class="line">                  <span class="string">"com.jc.tinkersample.BaseBuildInfo"</span></div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    lib &#123;</div><div class="line">        pattern = [<span class="string">"lib/armeabi/*.so"</span>]</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    res &#123;</div><div class="line">        pattern = [<span class="string">"res/*"</span>, <span class="string">"assets/*"</span>, <span class="string">"resources.arsc"</span>, <span class="string">"AndroidManifest.xml"</span>]</div><div class="line">        ignoreChange = [<span class="string">"assets/sample_meta.txt"</span>]</div><div class="line">        largeModSize = <span class="number">100</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    packageConfig &#123;</div><div class="line">        configField(<span class="string">"patchMessage"</span>, <span class="string">"tinker is sample to use"</span>)</div><div class="line">        configField(<span class="string">"platform"</span>, <span class="string">"all"</span>)</div><div class="line">        configField(<span class="string">"patchVersion"</span>, <span class="string">"1.0"</span>)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sevenZip &#123;</div><div class="line">        zipArtifact = <span class="string">"com.tencent.mm:SevenZip:1.1.10"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="接入Tinker"><a href="#接入Tinker" class="headerlink" title="接入Tinker"></a>接入Tinker</h2><p>自定义Application继承 <code>DefaultApplicationLike</code> 类，也可以<a href="https://github.com/Tencent/tinker/wiki/Tinker-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%89%A9%E5%B1%95" target="_blank" rel="external">自定义扩展</a>。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@DefaultLifeCycle</span>(</div><div class="line">        application = <span class="string">"com.jc.tinkersample.SimpleApp"</span>,</div><div class="line">        flags = ShareConstants.TINKER_ENABLE_ALL,</div><div class="line">        loadVerifyFlag = <span class="keyword">false</span></div><div class="line">)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleAppLike</span> <span class="keyword">extends</span> <span class="title">DefaultApplicationLike</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SimpleAppLike</span><span class="params">(Application application, <span class="keyword">int</span> tinkerFlags, <span class="keyword">boolean</span> tinkerLoadVerifyFlag, <span class="keyword">long</span> applicationStartElapsedTime, <span class="keyword">long</span> applicationStartMillisTime, Intent tinkerResultIntent, Resources[] resources, ClassLoader[] classLoader, AssetManager[] assetManager)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(application, tinkerFlags, tinkerLoadVerifyFlag, applicationStartElapsedTime, applicationStartMillisTime, tinkerResultIntent, resources, classLoader, assetManager);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBaseContextAttached</span><span class="params">(Context base)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onBaseContextAttached(base);</div><div class="line">        MultiDex.install(base);</div><div class="line">        TinkerInstaller.install(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@TargetApi</span>(Build.VERSION_CODES.ICE_CREAM_SANDWICH)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerActivityLifecycleCallbacks</span><span class="params">(Application.ActivityLifecycleCallbacks callback)</span> </span>&#123;</div><div class="line">        getApplication().registerActivityLifecycleCallbacks(callback);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行安装到你的手机里，然后把 <code>app-debug.apk</code> 放到 <code>oldApk</code> 对应的路径下，用于生成 <code>patch.apk</code>。</p>
<p><img src="https://github.com/githubhaohao/TinkerSample/raw/master/image/app_debug.png" alt="app_debug"></p>
<p>然后，修复你项目的bug（这里只是象征性地修改了一下Text），打开Android Studio 右侧的gradle project 运行 <code>tinkerPatchDebug</code> task生成<code>patch.apk</code>。</p>
<p><img src="https://github.com/githubhaohao/TinkerSample/blob/master/image/terminal.png?raw=true" alt="command"></p>
<p><img src="https://github.com/githubhaohao/TinkerSample/blob/master/image/tinker_task.png?raw=true" alt="tinker_task"></p>
<p>找到<code>patch_signed_7zip.apk</code> 文件。</p>
<p><img src="https://github.com/githubhaohao/TinkerSample/blob/master/image/signed_apk.png?raw=true" alt="new_apk"></p>
<p>复制 <code>patch_signed_7zip.apk</code> 文件把它放到手机外部存储目录下 （这里为根目录）。 </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">String path = Environment.getExternalStorageDirectory().getAbsolutePath() + <span class="string">"/patch_signed_7zip.apk"</span>;</div><div class="line">File file = <span class="keyword">new</span> File(path);</div><div class="line"><span class="keyword">if</span> (file.exists())&#123;</div><div class="line">    Toast.makeText(<span class="keyword">this</span>, <span class="string">"patch.apk is existing."</span>, Toast.LENGTH_SHORT).show();</div><div class="line">    TinkerInstaller.onReceiveUpgradePatch(getApplicationContext(), path);</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    Toast.makeText(<span class="keyword">this</span>,<span class="string">"patch.apk is inexistent."</span>, Toast.LENGTH_SHORT).show();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>调用Tinker API <code>TinkerInstaller.onReceiveUpgradePatch(getApplicationContext(), path);</code> 进行热修复，重启app热修复完成。</p>
<p>详细代码<a href="https://github.com/githubhaohao/TinkerSample" target="_blank" rel="external">https://github.com/githubhaohao/TinkerSample</a></p>
<h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><ol>
<li><a href="https://github.com/WeMobileDev/article/blob/master/%E5%BE%AE%E4%BF%A1Android%E7%83%AD%E8%A1%A5%E4%B8%81%E5%AE%9E%E8%B7%B5%E6%BC%94%E8%BF%9B%E4%B9%8B%E8%B7%AF.md" target="_blank" rel="external">微信Android热补丁实践演进之路</a></li>
<li><a href="https://github.com/WeMobileDev/article/blob/master/Android_N%E6%B7%B7%E5%90%88%E7%BC%96%E8%AF%91%E4%B8%8E%E5%AF%B9%E7%83%AD%E8%A1%A5%E4%B8%81%E5%BD%B1%E5%93%8D%E8%A7%A3%E6%9E%90.md" target="_blank" rel="external">Android N混合编译与对热补丁影响深度解析</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&amp;mid=2649286384&amp;idx=1&amp;sn=f1aff31d6a567674759be476bcd12549&amp;scene=4#wechat_redirect" target="_blank" rel="external">微信Tinker的一切都在这里，包括源码</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Tinker是什么&quot;&gt;&lt;a href=&quot;#Tinker是什么&quot; class=&quot;headerlink&quot; title=&quot;Tinker是什么&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Tencent/tinker&quot; target=&quot;_blank&quot;
    
    </summary>
    
      <category term="Android" scheme="https://githubhaohao.github.io/categories/Android/"/>
    
    
      <category term="Tinker" scheme="https://githubhaohao.github.io/tags/Tinker/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://githubhaohao.github.io/2017/01/12/cover/"/>
    <id>https://githubhaohao.github.io/2017/01/12/cover/</id>
    <published>2017-01-12T08:31:23.971Z</published>
    <updated>2017-01-18T01:30:29.106Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>合抱之木，生于毫末；九层之台，起于累土；千里之行，始于足下。</p>
<p><strong>老子</strong> </p>
</blockquote>
<p><div align="center"><br><img src="https://avatars0.githubusercontent.com/u/17926884?v=3&s=460" width="100" height="100" alt="logo"><br></div></p>
<p align="center"><i>不忘初心，不惧未来。<i><br><br><b>haohao</b><br><br>2017/01/14<br></i></i></p>

]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;合抱之木，生于毫末；九层之台，起于累土；千里之行，始于足下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;老子&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div align=&quot;center&quot;
    
    </summary>
    
    
      <category term="hello world" scheme="https://githubhaohao.github.io/tags/hello-world/"/>
    
  </entry>
  
</feed>
