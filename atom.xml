<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Haohao</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://githubhaohao.github.io/"/>
  <updated>2017-02-12T09:30:17.002Z</updated>
  <id>https://githubhaohao.github.io/</id>
  
  <author>
    <name>Haohao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MVVM，RxJava 和 Retrofit 的一次实践</title>
    <link href="https://githubhaohao.github.io/2017/02/12/MVVM%EF%BC%8CRxJava%E5%92%8CRetrofit%E7%9A%84%E4%B8%80%E6%AC%A1%E5%AE%9E%E8%B7%B5/"/>
    <id>https://githubhaohao.github.io/2017/02/12/MVVM，RxJava和Retrofit的一次实践/</id>
    <published>2017-02-12T06:21:25.000Z</published>
    <updated>2017-02-12T09:30:17.002Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/country-1295915__340.png?raw=true" alt="Cover"><br><blockquote><p>在GitHub上看了几个关于MVVM设计模式的例子，发现他们并没有做到 View 层与 Model 层逻辑的完全分离，故以一个小的实践以作总结。<br>原创文章，转载请注明出处:<a href="http://haohaochang.cn/" target="_blank" rel="external">haohaochang.cn</a></p>
</blockquote></p>
<h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="https://github.com/githubhaohao/MVVMRxJavaRetrofitSample/blob/master/image/sample.gif?raw=true" alt="result"></p>
<h2 id="准备知识"><a href="#准备知识" class="headerlink" title="准备知识"></a>准备知识</h2><h3 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/mvc.PNG?raw=true" alt="mvc"></p>
<ul>
<li><strong>视图（View）</strong>：用户界面。</li>
<li><strong>控制器（Controller）</strong>：业务逻辑</li>
<li><strong>模型（Model）</strong>：数据保存</li>
</ul>
<hr>
<ol>
<li>View 传送指令到 Controller</li>
<li>Controller 完成业务逻辑后，要求 Model 改变状态</li>
<li>Model 将新的数据发送到 View，使用户得到反馈</li>
</ol>
<p><strong>缺陷</strong>:View 和 Model 是相互可知，耦合性大，像 Activity 或者 Fragment 既是 Controller 层，由是 View 层，造成工程的可扩展性可维护性非常差。</p>
<h3 id="MVP"><a href="#MVP" class="headerlink" title="MVP"></a>MVP</h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/mvp.png?raw=true" alt="mvp"></p>
<p>在 MVP 设计模式中，Controller 变成了 Presenter。</p>
<ol>
<li>各层之间的通信，都是双向的。</li>
<li>View 与 Model 不直接发生联系，都通过 Presenter 进行间接通信。</li>
<li>Model 层与 Presenter 层，Presenter 层与 View 层之间通过接口建立联系。</li>
</ol>
<p>采用 MVP 设计模式，Activity 与 Fragment 只位于 View 层。</p>
<p><strong>MVP 的缺陷在于</strong>:由于我们使用了接口的方式去连接 View 层和  Presenter 层，这样就导致了一个问题，当你的页面逻辑很复杂的时候，你的接口会有很多，如果你的 app 中有很多个这样复杂的页面，维护接口的成本就会变的非常的大。</p>
<h3 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/mvvp.PNG?raw=true" alt="MVVM"></p>
<p>MVVM 模式将 Presenter 改名为 ViewModel，基本上与 MVP 模式完全一致。<br><strong>区别在于</strong>: View 层与 ViewModel 层通过<code>DataBinding</code>相互绑定，View的变动，自动反映在 ViewModel，反之亦然。</p>
<h3 id="RxJava"><a href="#RxJava" class="headerlink" title="RxJava"></a><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava</a></h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/kotlin-android-rxjava.png?raw=true" alt="RxJava"></p>
<p>RxJava 在 GitHub 主页上的自我介绍是 “a library for composing asynchronous and event-based programs using observable sequences for the Java VM”（一个在 Java VM 上使用可观测的序列来组成异步的、基于事件的程序的库）。</p>
<p>Rx 是微软 .Net 的一个响应式扩展，Rx 借助可观测的序列提供一种简单的方式来创建异步的，基于事件驱动的程序。2012 年 Netflix 为了应对不断增长的业务需求开始将 .NET Rx 迁移到 JVM 上面。并于 13 年二月份正式向外展示了 RxJava 。</p>
<p>从语义的角度来看， RxJava 就是 .NET Rx 。从语法的角度来看， Netflix 考虑到了对应每个 Rx 方法,保留了 Java 代码规范和基本的模式。</p>
<p>RxJava 本质上是一个异步操作库，是一个能让你用极其简洁的逻辑去处理繁琐复杂任务的异步事件库。</p>
<p>简而言之，RxJava 可以用几个关键字概括：<strong>简洁</strong>，<strong>队列化</strong>，<strong>异步</strong>。</p>
<h3 id="Retrofit"><a href="#Retrofit" class="headerlink" title="Retrofit"></a><a href="https://github.com/square/retrofit" target="_blank" rel="external">Retrofit</a></h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/android-libs-retrofit-1-638.jpg?raw=true" alt="retrofit"></p>
<p>一个 Android 和 Java 上 HTTP 库（利用注解和 okhttp 来实现和服务器的数据交互）。</p>
<blockquote><p><a href="http://square.github.io/retrofit/" target="_blank" rel="external"><strong>Retrofit 官方文档:http://square.github.io/retrofit/</strong></a></p>
</blockquote>
<h3 id="DataBinding"><a href="#DataBinding" class="headerlink" title="DataBinding"></a><a href="https://developer.android.com/topic/libraries/data-binding/index.html" target="_blank" rel="external">DataBinding</a></h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/data_binding.png?raw=true" alt="data-binding"></p>
<p>在今年的Google IO 2015 中，Google 在 support-v7 中新增了 Data Binding，使用 Data Binding可以直接在布局的 xml 中绑定布局与数据，从而简化代码，Android Data Binding是Android 的 MVVM 框架。因为 Data Binding 是包含在 support-v7 包里面的，所以可以向下兼容到最低 Android 2.1 (API level 7+).</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>直接上代码。</p>
<h3 id="依赖的第三方类库"><a href="#依赖的第三方类库" class="headerlink" title="依赖的第三方类库"></a>依赖的第三方类库</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">compile</span> <span class="string">'io.reactivex:rxjava:1.1.0'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'io.reactivex:rxandroid:1.1.0'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:retrofit:2.0.0-beta4'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:converter-gson:2.0.0-beta4'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'com.github.bumptech.glide:glide:3.7.0'</span></div></pre></td></tr></table></figure>
<h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><blockquote><p><code>https://api.douban.com/v2/movie/top250?start=0&amp;count=20</code></p>
</blockquote>
<h3 id="引入DataBinding"><a href="#引入DataBinding" class="headerlink" title="引入DataBinding"></a>引入DataBinding</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    ......</div><div class="line"></div><div class="line">    dataBinding &#123;</div><div class="line">        enabled = <span class="keyword">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="工程目录结构"><a href="#工程目录结构" class="headerlink" title="工程目录结构"></a>工程目录结构</h3><p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/mvvm/%E7%9B%AE%E5%BD%95.png?raw=true" alt="目录"></p>
<h3 id="MVVM-之-View"><a href="#MVVM-之-View" class="headerlink" title="MVVM 之 View"></a>MVVM 之 View</h3><p><strong>MainActivity.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getFragmentManager().beginTransaction().add(R.id.movie_fragment, MovieFragment.getInstance()).commit();</div></pre></td></tr></table></figure>
<p><strong>MovieFragment.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jc.mvvmrxjavaretrofitsample.view;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.Fragment;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</div><div class="line"><span class="keyword">import</span> android.support.v4.widget.SwipeRefreshLayout;</div><div class="line"><span class="keyword">import</span> android.support.v7.widget.DefaultItemAnimator;</div><div class="line"><span class="keyword">import</span> android.support.v7.widget.LinearLayoutManager;</div><div class="line"><span class="keyword">import</span> android.view.LayoutInflater;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.view.ViewGroup;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.jc.mvvmrxjavaretrofitsample.R;</div><div class="line"><span class="keyword">import</span> com.jc.mvvmrxjavaretrofitsample.databinding.MovieFragmentBinding;</div><div class="line"><span class="keyword">import</span> com.jc.mvvmrxjavaretrofitsample.viewModel.MainViewModel;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by HaohaoChang on 2017/2/11.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> <span class="keyword">implements</span> <span class="title">CompletedListener</span>,<span class="title">SwipeRefreshLayout</span>.<span class="title">OnRefreshListener</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String TAG = MovieFragment.class.getSimpleName();</div><div class="line">    <span class="keyword">private</span> MainViewModel viewModel;</div><div class="line">    <span class="keyword">private</span> MovieFragmentBinding movieFragmentBinding;</div><div class="line">    <span class="keyword">private</span> MovieAdapter movieAdapter;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MovieFragment <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MovieFragment();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        View contentView = inflater.inflate(R.layout.movie_fragment, container, <span class="keyword">false</span>);</div><div class="line">        movieFragmentBinding = MovieFragmentBinding.bind(contentView);</div><div class="line">        initData();</div><div class="line">        <span class="keyword">return</span> contentView;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">        movieAdapter = <span class="keyword">new</span> MovieAdapter();</div><div class="line">        movieFragmentBinding.recyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, <span class="keyword">false</span>));</div><div class="line">        movieFragmentBinding.recyclerView.setItemAnimator(<span class="keyword">new</span> DefaultItemAnimator());</div><div class="line">        movieFragmentBinding.recyclerView.setAdapter(movieAdapter);</div><div class="line">        movieFragmentBinding.swipeRefreshLayout.setColorSchemeResources(R.color.colorAccent, R.color.colorPrimary, R.color.colorPrimaryDark);</div><div class="line">        movieFragmentBinding.swipeRefreshLayout.setOnRefreshListener(<span class="keyword">this</span>);</div><div class="line">        viewModel = <span class="keyword">new</span> MainViewModel(movieAdapter,<span class="keyword">this</span>);</div><div class="line">        movieFragmentBinding.setViewModel(viewModel);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</div><div class="line">        movieAdapter.clearItems();</div><div class="line">        viewModel.refreshData();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (movieFragmentBinding.swipeRefreshLayout.isRefreshing()) &#123;</div><div class="line">            movieFragmentBinding.swipeRefreshLayout.setRefreshing(<span class="keyword">false</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>activity_main.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">".view.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme.AppBarOverlay"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></div><div class="line">            <span class="attr">app:popupTheme</span>=<span class="string">"@style/AppTheme.PopupOverlay"</span> /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">        <span class="attr">android:layout_marginTop</span>=<span class="string">"?attr/actionBarSize"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/movie_fragment"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/fab"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"bottom|end"</span></div><div class="line">        <span class="attr">android:layout_margin</span>=<span class="string">"@dimen/fab_margin"</span></div><div class="line">        <span class="attr">android:src</span>=<span class="string">"@android:drawable/ic_dialog_email"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>movie_fragment.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">variable</span></span></div><div class="line">            <span class="attr">name</span>=<span class="string">"viewModel"</span></div><div class="line">            <span class="attr">type</span>=<span class="string">"com.jc.mvvmrxjavaretrofitsample.viewModel.MainViewModel"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">android.support.v4.widget.SwipeRefreshLayout</span></span></div><div class="line">            <span class="attr">android:visibility</span>=<span class="string">"@&#123;viewModel.contentViewVisibility&#125;"</span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/swipe_refresh_layout"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#ddd"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:padding</span>=<span class="string">"8dp"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></div><div class="line">            <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleLarge"</span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/progress_bar"</span></div><div class="line">            <span class="attr">android:visibility</span>=<span class="string">"@&#123;viewModel.progressBarVisibility&#125;"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span>/&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/error_info_layout"</span></div><div class="line">            <span class="attr">android:visibility</span>=<span class="string">"@&#123;viewModel.errorInfoLayoutVisibility&#125;"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.exception&#125;"</span>/&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>movie_item.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">variable</span></span></div><div class="line">            <span class="attr">name</span>=<span class="string">"viewModel"</span></div><div class="line">            <span class="attr">type</span>=<span class="string">"com.jc.mvvmrxjavaretrofitsample.viewModel.MovieViewModel"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span></span></div><div class="line">        <span class="attr">xmlns:card_view</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/card_view"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">card_view:cardCornerRadius</span>=<span class="string">"4dp"</span></div><div class="line">        <span class="attr">card_view:cardBackgroundColor</span>=<span class="string">"@color/background"</span></div><div class="line">        <span class="attr">card_view:cardUseCompatPadding</span>=<span class="string">"true"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                <span class="attr">android:layout_margin</span>=<span class="string">"8dp"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></div><div class="line">                <span class="attr">android:src</span>=<span class="string">"@drawable/cover"</span></div><div class="line">                <span class="attr">app:imageUrl</span>=<span class="string">"@&#123;viewModel.imageUrl&#125;"</span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/cover"</span>/&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_margin</span>=<span class="string">"8dp"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:textColor</span>=<span class="string">"@android:color/black"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.title&#125;"</span></div><div class="line">                    <span class="attr">android:textSize</span>=<span class="string">"12sp"</span>/&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_marginTop</span>=<span class="string">"4dp"</span></div><div class="line">                    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line">                    <span class="tag">&lt;<span class="name">android.support.v7.widget.AppCompatRatingBar</span></span></div><div class="line">                        <span class="attr">android:id</span>=<span class="string">"@+id/ratingBar"</span></div><div class="line">                        <span class="attr">style</span>=<span class="string">"?android:attr/ratingBarStyleSmall"</span></div><div class="line">                        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                        <span class="attr">android:layout_gravity</span>=<span class="string">"center_vertical"</span></div><div class="line">                        <span class="attr">android:isIndicator</span>=<span class="string">"true"</span></div><div class="line">                        <span class="attr">android:max</span>=<span class="string">"10"</span></div><div class="line">                        <span class="attr">android:numStars</span>=<span class="string">"5"</span></div><div class="line">                        <span class="attr">android:rating</span>=<span class="string">"@&#123;viewModel.rating&#125;"</span> /&gt;</div><div class="line"></div><div class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                        <span class="attr">android:id</span>=<span class="string">"@+id/rating_text"</span></div><div class="line">                        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                        <span class="attr">android:layout_gravity</span>=<span class="string">"center_vertical"</span></div><div class="line">                        <span class="attr">android:layout_marginLeft</span>=<span class="string">"6dp"</span></div><div class="line">                        <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.ratingText&#125;"</span></div><div class="line">                        <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorSecondary"</span></div><div class="line">                        <span class="attr">android:textSize</span>=<span class="string">"10sp"</span> /&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorSecondary"</span></div><div class="line">                    <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></div><div class="line">                    <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.movieType&#125;"</span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/movie_type_text"</span></div><div class="line">                    <span class="attr">android:layout_marginTop</span>=<span class="string">"6dp"</span></div><div class="line">                    /&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorSecondary"</span></div><div class="line">                    <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></div><div class="line">                    <span class="attr">android:text</span>=<span class="string">"@&#123;viewModel.year&#125;"</span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/year_text"</span></div><div class="line">                    <span class="attr">android:layout_marginTop</span>=<span class="string">"6dp"</span></div><div class="line">                    /&gt;</div><div class="line"></div><div class="line"></div><div class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>MovieAdapter.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">MovieAdapter</span>.<span class="title">BindingHolder</span>&gt; </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;Movie&gt; movies;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MovieAdapter</span><span class="params">()</span> </span>&#123;</div><div class="line">        movies = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> BindingHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">        MovieItemBinding itemBinding = DataBindingUtil.inflate(LayoutInflater.from(parent.getContext()), R.layout.movie_item, parent, <span class="keyword">false</span>);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BindingHolder(itemBinding);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(BindingHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        MovieViewModel movieViewModel = <span class="keyword">new</span> MovieViewModel(movies.get(position));</div><div class="line">        holder.itemBinding.setViewModel(movieViewModel);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movies.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(Movie movie)</span> </span>&#123;</div><div class="line">        movies.add(movie);</div><div class="line">        notifyItemInserted(movies.size() - <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearItems</span><span class="params">()</span> </span>&#123;</div><div class="line">        movies.clear();</div><div class="line">        notifyDataSetChanged();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">BindingHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> MovieItemBinding itemBinding;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">BindingHolder</span><span class="params">(MovieItemBinding itemBinding)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(itemBinding.cardView);</div><div class="line">            <span class="keyword">this</span>.itemBinding = itemBinding;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>回调接口<strong> CompletedListener.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CompletedListener</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="MVVM-之-ViewModel"><a href="#MVVM-之-ViewModel" class="headerlink" title="MVVM 之 ViewModel"></a>MVVM 之 ViewModel</h3><p><strong>MainViewModel.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jc.mvvmrxjavaretrofitsample.viewModel;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.databinding.ObservableField;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.jc.mvvmrxjavaretrofitsample.model.data.RetrofitHelper;</div><div class="line"><span class="keyword">import</span> com.jc.mvvmrxjavaretrofitsample.model.entity.Movie;</div><div class="line"><span class="keyword">import</span> com.jc.mvvmrxjavaretrofitsample.view.CompletedListener;</div><div class="line"><span class="keyword">import</span> com.jc.mvvmrxjavaretrofitsample.view.MovieAdapter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> rx.Subscriber;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by HaohaoChang on 2017/2/11.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainViewModel</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> ObservableField&lt;Integer&gt; contentViewVisibility;</div><div class="line">    <span class="keyword">public</span> ObservableField&lt;Integer&gt; progressBarVisibility;</div><div class="line">    <span class="keyword">public</span> ObservableField&lt;Integer&gt; errorInfoLayoutVisibility;</div><div class="line">    <span class="keyword">public</span> ObservableField&lt;String&gt; exception;</div><div class="line">    <span class="keyword">private</span> Subscriber&lt;Movie&gt; subscriber;</div><div class="line">    <span class="keyword">private</span> MovieAdapter movieAdapter;</div><div class="line">    <span class="keyword">private</span> CompletedListener completedListener;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainViewModel</span><span class="params">(MovieAdapter movieAdapter,CompletedListener completedListener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.movieAdapter = movieAdapter;</div><div class="line">        <span class="keyword">this</span>.completedListener = completedListener;</div><div class="line">        initData();</div><div class="line">        getMovies();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getMovies</span><span class="params">()</span> </span>&#123;</div><div class="line">        subscriber = <span class="keyword">new</span> Subscriber&lt;Movie&gt;() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</div><div class="line">                Log.d(<span class="string">"[MainViewModel]"</span>, <span class="string">"onCompleted"</span>);</div><div class="line">                hideAll();</div><div class="line">                contentViewVisibility.set(View.VISIBLE);</div><div class="line">                completedListener.onCompleted();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</div><div class="line">                hideAll();</div><div class="line">                errorInfoLayoutVisibility.set(View.VISIBLE);</div><div class="line">                exception.set(e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(Movie movie)</span> </span>&#123;</div><div class="line">                movieAdapter.addItem(movie);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        RetrofitHelper.getInstance().getMovies(subscriber, <span class="number">0</span>, <span class="number">20</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refreshData</span><span class="params">()</span> </span>&#123;</div><div class="line">        getMovies();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">        contentViewVisibility = <span class="keyword">new</span> ObservableField&lt;&gt;();</div><div class="line">        progressBarVisibility = <span class="keyword">new</span> ObservableField&lt;&gt;();</div><div class="line">        errorInfoLayoutVisibility = <span class="keyword">new</span> ObservableField&lt;&gt;();</div><div class="line">        exception = <span class="keyword">new</span> ObservableField&lt;&gt;();</div><div class="line">        contentViewVisibility.set(View.GONE);</div><div class="line">        errorInfoLayoutVisibility.set(View.GONE);</div><div class="line">        progressBarVisibility.set(View.VISIBLE);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">hideAll</span><span class="params">()</span></span>&#123;</div><div class="line">        contentViewVisibility.set(View.GONE);</div><div class="line">        errorInfoLayoutVisibility.set(View.GONE);</div><div class="line">        progressBarVisibility.set(View.GONE);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>MovieViewModel.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.jc.mvvmrxjavaretrofitsample.viewModel;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.databinding.BaseObservable;</div><div class="line"><span class="keyword">import</span> android.databinding.BindingAdapter;</div><div class="line"><span class="keyword">import</span> android.widget.ImageView;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.bumptech.glide.Glide;</div><div class="line"><span class="keyword">import</span> com.jc.mvvmrxjavaretrofitsample.R;</div><div class="line"><span class="keyword">import</span> com.jc.mvvmrxjavaretrofitsample.model.entity.Movie;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by HaohaoChang on 2017/2/11.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieViewModel</span> <span class="keyword">extends</span> <span class="title">BaseObservable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Movie movie;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MovieViewModel</span><span class="params">(Movie movie)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.movie = movie;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCoverUrl</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getImages().getSmall();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getTitle();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getRating</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getRating().getAverage();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRatingText</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> String.valueOf(movie.getRating().getAverage());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getYear</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getYear();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMovieType</span><span class="params">()</span> </span>&#123;</div><div class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</div><div class="line">        <span class="keyword">for</span> (String s : movie.getGenres()) &#123;</div><div class="line">            builder.append(s + <span class="string">" "</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> builder.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getImageUrl</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> movie.getImages().getSmall();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@BindingAdapter</span>(&#123;<span class="string">"app:imageUrl"</span>&#125;)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(ImageView imageView,String url)</span> </span>&#123;</div><div class="line">        Glide.with(imageView.getContext())</div><div class="line">                .load(url)</div><div class="line">                .placeholder(R.drawable.cover)</div><div class="line">                .error(R.drawable.cover)</div><div class="line">                .into(imageView);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="MVVM-之-Model"><a href="#MVVM-之-Model" class="headerlink" title="MVVM 之 Model"></a>MVVM 之 Model</h3><p><strong>DouBanMovieService.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DouBanMovieService</span> </span>&#123;</div><div class="line">    String BASE_URL = <span class="string">"https://api.douban.com/v2/movie/"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@GET</span>(<span class="string">"top250"</span>)</div><div class="line">    Observable&lt;Response&lt;List&lt;Movie&gt;&gt;&gt; getMovies(<span class="meta">@Query</span>(<span class="string">"start"</span>) <span class="keyword">int</span> start, <span class="meta">@Query</span>(<span class="string">"count"</span>) <span class="keyword">int</span> count);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>RetrofitHelper.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RetrofitHelper</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_TIMEOUT = <span class="number">10</span>;</div><div class="line">    <span class="keyword">private</span> Retrofit retrofit;</div><div class="line">    <span class="keyword">private</span> DouBanMovieService movieService;</div><div class="line">    OkHttpClient.Builder builder;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获取RetrofitHelper对象的单例</div><div class="line">     * */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> RetrofitHelper INSTANCE = <span class="keyword">new</span> RetrofitHelper();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RetrofitHelper <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> Singleton.INSTANCE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RetrofitHelper</span><span class="params">()</span> </span>&#123;</div><div class="line">        builder = <span class="keyword">new</span> OkHttpClient.Builder();</div><div class="line">        builder.connectTimeout(DEFAULT_TIMEOUT, TimeUnit.SECONDS);</div><div class="line"></div><div class="line">        retrofit = <span class="keyword">new</span> Retrofit.Builder()</div><div class="line">                .client(builder.build())</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">                .baseUrl(DouBanMovieService.BASE_URL)</div><div class="line">                .build();</div><div class="line">        movieService = retrofit.create(DouBanMovieService.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMovies</span><span class="params">(Subscriber&lt;Movie&gt; subscriber, <span class="keyword">int</span> start, <span class="keyword">int</span> count)</span> </span>&#123;</div><div class="line">        movieService.getMovies(start, count)</div><div class="line">                .map(<span class="keyword">new</span> Func1&lt;Response&lt;List&lt;Movie&gt;&gt;, List&lt;Movie&gt;&gt;() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> List&lt;Movie&gt; <span class="title">call</span><span class="params">(Response&lt;List&lt;Movie&gt;&gt; listResponse)</span> </span>&#123;</div><div class="line">                        <span class="keyword">return</span> listResponse.getSubjects();</div><div class="line">                    &#125;</div><div class="line">                &#125;)</div><div class="line">                .flatMap(<span class="keyword">new</span> Func1&lt;List&lt;Movie&gt;, Observable&lt;Movie&gt;&gt;() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> Observable&lt;Movie&gt; <span class="title">call</span><span class="params">(List&lt;Movie&gt; movies)</span> </span>&#123;</div><div class="line">                        <span class="keyword">return</span> Observable.from(movies);</div><div class="line">                    &#125;</div><div class="line">                &#125;)</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(subscriber);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>还有 entity 类，这里就不贴出来了。</p>
<blockquote><p>详细源码：<a href="https://github.com/githubhaohao/MVVMRxJavaRetrofitSample" target="_blank" rel="external">https://github.com/githubhaohao/MVVMRxJavaRetrofitSample</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/githubhaohao/ImageRoom/blob/master/Images/country-1295915__340.png?raw=true&quot; alt=&quot;Cover&quot;&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;
    
    </summary>
    
      <category term="Android" scheme="https://githubhaohao.github.io/categories/Android/"/>
    
    
      <category term="MVVM" scheme="https://githubhaohao.github.io/tags/MVVM/"/>
    
  </entry>
  
  <entry>
    <title>ES6入门: 需要掌握的基本语法</title>
    <link href="https://githubhaohao.github.io/2017/01/25/ES6%E5%85%A5%E9%97%A8-%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://githubhaohao.github.io/2017/01/25/ES6入门-需要掌握的基本语法/</id>
    <published>2017-01-25T14:26:31.000Z</published>
    <updated>2017-01-30T09:52:18.135Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/githubhaohao/ImageRoom/blob/master/Images/es6.jpg?raw=true" alt=""></p>
<h2 id="ES6是什么"><a href="#ES6是什么" class="headerlink" title="ES6是什么"></a>ES6是什么</h2><h3 id="1-ES-ECMAScript-和JavaScript的关系"><a href="#1-ES-ECMAScript-和JavaScript的关系" class="headerlink" title="1. ES (ECMAScript) 和JavaScript的关系"></a>1. ES (ECMAScript) 和JavaScript的关系</h3><blockquote><p>ECMAScript和JavaScript的关系是，前者是后者的规格，后者是前者的一种实现（另外的ECMAScript方言还有Jscript和ActionScript）。日常场合，这两个词是可以互换的。</p>
<footer><strong>阮一峰</strong><cite>ECMAScript</cite></footer></blockquote>
<h3 id="2-ES6和ECMAScript-2015的关系"><a href="#2-ES6和ECMAScript-2015的关系" class="headerlink" title="2. ES6和ECMAScript 2015的关系"></a>2. ES6和ECMAScript 2015的关系</h3><p>ES6，一般是指ECMAScript 2015标准，但有时也表示一种泛指，是指JavaScript语言的下一代标准。涵盖了ECMAScript 2015，2016，2017等版本，而ECMAScript 2015则是正式名称，特指该年发布的正式版本的语言标准。</p>
<h2 id="Babel转码器"><a href="#Babel转码器" class="headerlink" title="Babel转码器"></a><a href="http://babeljs.io/docs/setup/" target="_blank" rel="external">Babel转码器</a></h2><p><img src="https://github.com/githubhaohao/TinkerSample/blob/master/image/babel.png?raw=true" alt=""></p>
<p>Babel是一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行。去<a href="http://babeljs.io/docs/setup/" target="_blank" rel="external">官网</a>选择自己习惯的工具来使用使用Babel吧！</p>
<h2 id="let和const命令"><a href="#let和const命令" class="headerlink" title="let和const命令"></a>let和const命令</h2><p>let和const与var类似都是用来声明变量的，但又有各自不同的用途。let与var对比，看代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> name = <span class="string">'haohao'</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="literal">true</span>)&#123;</div><div class="line">  <span class="keyword">var</span> name = <span class="string">'jack'</span>;</div><div class="line">  <span class="built_in">console</span>.log(name)  <span class="comment">//jack</span></div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="built_in">console</span>.log(name)  <span class="comment">//jack</span></div></pre></td></tr></table></figure>
<p>ES5只有全局作用域和块级作用域，导致内层变量覆盖外层变量，使得两次输出的都是<code>jack</code>。而let为JS新增了块级作用域，因此它声明的变量只在let命令所在的代码块有效，具体看代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> name = <span class="string">'haohao'</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="literal">true</span>)&#123;</div><div class="line">  <span class="keyword">let</span> name = <span class="string">'jack'</span>;</div><div class="line">  <span class="built_in">console</span>.log(name)  <span class="comment">//jack</span></div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="built_in">console</span>.log(name)  <span class="comment">//haohao</span></div></pre></td></tr></table></figure>
<p>const用来声明常量，一旦声明就不能改变。当我们尝试改变const声明的常量时，浏览器就会报错。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> PI = <span class="built_in">Math</span>.PI</div><div class="line"> </div><div class="line">PI = <span class="number">23</span> <span class="comment">//Module build failed: SyntaxError: /es6/app.js: "PI" is read-only</span></div></pre></td></tr></table></figure>
<p>引用其他Module中声明的变量，用const来声明可以避免对其重命名而导致出现BUG。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> &#123;width, height&#125; = <span class="built_in">window</span>.get(<span class="string">'Dimension'</span>);</div></pre></td></tr></table></figure>
<h2 id="解构-Destructuring"><a href="#解构-Destructuring" class="headerlink" title="解构 (Destructuring)"></a>解构 (Destructuring)</h2><p><strong>解构</strong> (Destructuring) 是指按照某种模式，从对象或数组中提取值对指定的变量进行赋值。</p>
<p>ES6之前为变量赋值：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> name = <span class="string">'jack'</span>;</div><div class="line"><span class="keyword">let</span> addr = <span class="string">'cn'</span>;</div><div class="line"><span class="keyword">let</span> sex = <span class="string">'male'</span>;</div></pre></td></tr></table></figure>
<p>ES6可以这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> [name,addr,sex] = [<span class="string">'jack'</span>,<span class="string">'cn'</span>,<span class="string">'male'</span>];</div><div class="line"></div><div class="line">name <span class="comment">//jack</span></div><div class="line">addr <span class="comment">//cn</span></div><div class="line">sex  <span class="comment">//male</span></div></pre></td></tr></table></figure>
<p>默认值:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> [name,addr,sex = <span class="string">'male'</span>] = [<span class="string">'jack'</span>,<span class="string">'cn'</span>];</div><div class="line"></div><div class="line">name <span class="comment">//jack</span></div><div class="line">addr <span class="comment">//cn</span></div><div class="line">sex  <span class="comment">//male</span></div></pre></td></tr></table></figure>
<p>关于对象以前这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> name = <span class="string">'jack'</span>;</div><div class="line"><span class="keyword">let</span> addr = <span class="string">'cn'</span>;</div><div class="line"><span class="keyword">let</span> sex = <span class="string">'male'</span>;</div><div class="line"><span class="keyword">let</span> student = &#123; <span class="attr">name</span>:name, <span class="attr">addr</span>:addr, <span class="attr">sex</span>:sex &#125;</div><div class="line"><span class="built_in">console</span>.log(student);</div><div class="line"></div><div class="line"><span class="comment">//Object &#123; name:'jack', addr:'cn', sex:'male' &#125;</span></div></pre></td></tr></table></figure>
<p>ES6可以这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> name = <span class="string">'jack'</span>;</div><div class="line"><span class="keyword">let</span> addr = <span class="string">'cn'</span>;</div><div class="line"><span class="keyword">let</span> sex = <span class="string">'male'</span>;</div><div class="line"><span class="keyword">let</span> student = &#123; name, addr, sex &#125;</div><div class="line"><span class="built_in">console</span>.log(student);</div><div class="line"></div><div class="line"><span class="comment">//Object &#123; name:'jack', addr:'cn', sex:'male' &#125;</span></div></pre></td></tr></table></figure>
<p>还有这样:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> student = &#123; <span class="attr">name</span>:<span class="string">'kene'</span>, <span class="attr">addr</span>:<span class="string">'us'</span>, <span class="attr">sex</span>:<span class="string">'male'</span> &#125;</div><div class="line"><span class="keyword">let</span> &#123; name, sex &#125; = student;</div><div class="line"><span class="keyword">let</span> &#123; addr &#125; = student;</div><div class="line"><span class="built_in">console</span>.log(name, addr, sex);</div><div class="line"></div><div class="line"><span class="comment">//kene us male</span></div></pre></td></tr></table></figure>
<h2 id="模板字符串-template-string"><a href="#模板字符串-template-string" class="headerlink" title="模板字符串 (template string)"></a>模板字符串 (template string)</h2><p>传统模板字符串：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#showId'</span>).append(</div><div class="line">  <span class="string">"Hello，everyone!"</span> +</div><div class="line">  <span class="string">"I am Jack."</span>+</div><div class="line">  <span class="string">"I like eat "</span> + fruits + <span class="string">"!"</span> </div><div class="line">);</div></pre></td></tr></table></figure>
<p>ES6模板字符串：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#showId'</span>).append(<span class="string">`</span></div><div class="line">  Hello，everyone!</div><div class="line">  I am Jack.</div><div class="line">  I like eat <span class="subst">$&#123;fruits&#125;</span>! </div><div class="line">`);</div></pre></td></tr></table></figure>
<p>反引号标识起始，<code>${}</code>引入变量，所有的空格缩进保存输出。</p>
<h2 id="箭头函数-arrow-functions"><a href="#箭头函数-arrow-functions" class="headerlink" title="箭头函数 (arrow functions)"></a>箭头函数 (arrow functions)</h2><p>ES6允许使用“箭头”（=&gt;）定义函数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> func = <span class="function"><span class="params">i</span> =&gt;</span> i + <span class="number">1</span>;</div><div class="line"><span class="keyword">var</span> func = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;a++; b++; <span class="keyword">return</span> a + b;&#125;</div></pre></td></tr></table></figure>
<p>上面的箭头函数等同于：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> func = <span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> i + <span class="number">1</span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> func = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">  a++;</div><div class="line">  b++;</div><div class="line">  <span class="keyword">return</span> a + b;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当我们使用箭头函数时，函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。并不是因为箭头函数内部有绑定this的机制，实际原因是箭头函数根本没有自己的this，它的this是继承外面的，因此内部的this就是外层代码块的this。有一种使用场景：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>()&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'person'</span>;</div><div class="line">  &#125;</div><div class="line">  sayHello()&#123;</div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">'says hello.'</span>);</div><div class="line">  &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person();</div><div class="line">p.sayHello();</div><div class="line"></div><div class="line"><span class="comment">//undefined says hello.</span></div></pre></td></tr></table></figure>
<p>运行上面的代码会报错，这是因为setTimeout中的this指向的是全局对象。有了箭头函数上述问题便可迎刃而解：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>()&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'person'</span>;</div><div class="line">  &#125;</div><div class="line">  sayHello()&#123;</div><div class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">'says hello.'</span>);</div><div class="line">  &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person();</div><div class="line">p.sayHello();</div><div class="line"></div><div class="line"><span class="comment">//person says hello.</span></div></pre></td></tr></table></figure>
<h2 id="类-Class"><a href="#类-Class" class="headerlink" title="类 (Class)"></a>类 (Class)</h2><p>ES6提供了更接近传统语言的写法，引入了Class（类）这个概念。新的class写法让对象原型的写法更加清晰、更像面向对象编程的语法，也更加通俗易懂。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>()&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'person'</span>;</div><div class="line">  &#125;</div><div class="line">  sayHello()&#123;</div><div class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">'says hello.'</span>);</div><div class="line">  &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person();</div><div class="line">p.sayHello();</div><div class="line"></div><div class="line"><span class="comment">//person says hello.</span></div></pre></td></tr></table></figure>
<p>上面代码首先用class定义了一个“类”，可以看到里面有一个constructor方法，这就是构造方法，而this关键字则代表实例对象。简单地说，constructor内定义的方法和属性是实例对象自己的，而constructor外定义的方法和属性则是所有实例对象可以共享的。</p>
<p>ES6的继承机制，实质是先创造父类的实例对象this（所以必须先调用super方法），然后再用子类的构造函数修改this。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>()&#123;</div><div class="line">    <span class="keyword">super</span>();</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'student'</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> s = <span class="keyword">new</span> Student();</div><div class="line">s.sayHello();</div><div class="line"></div><div class="line"><span class="comment">//student says hello.</span></div></pre></td></tr></table></figure>
<p>上面定义了一个Student类，该类通过extends关键字，继承了Person类的所有属性和方法。</p>
<p>子类Student必须在constructor方法中调用super方法，否则新建实例时会报错,子类就得不到this对象。这是因为子类没有自己的this对象，而是继承父类的this对象，然后对其进行加工。</p>
<h2 id="export和import"><a href="#export和import" class="headerlink" title="export和import"></a>export和import</h2><p>ES6的模块化功能。<br>以前这样写：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="built_in">module</span>.exports = <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">var</span> fruits = <span class="built_in">require</span>(<span class="string">'./content.js'</span>);</div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"></div><div class="line"><span class="comment">//apple</span></div></pre></td></tr></table></figure>
<p>ES6这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">import</span> fruits <span class="keyword">from</span> <span class="string">'./content.js'</span>;</div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"></div><div class="line"><span class="comment">//apple</span></div></pre></td></tr></table></figure>
<p>深入点，看代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> KIND = <span class="string">'Thailand Apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="string">'I like apple!'</span>;</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">import</span> fruits, &#123; say, KIND &#125;  <span class="keyword">from</span> <span class="string">'./content.js'</span>;</div><div class="line"><span class="comment">//如果只导入say //import &#123; say &#125;  from './content.js';</span></div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"><span class="built_in">console</span>.log(KIND);</div><div class="line">say();</div><div class="line"></div><div class="line"><span class="comment">//apple </span></div><div class="line"><span class="comment">//Thailand Apple</span></div><div class="line"><span class="comment">//I like apple!</span></div></pre></td></tr></table></figure>
<p>修改变量名。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> KIND = <span class="string">'Thailand Apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="string">'I like apple!'</span>;</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">import</span> fruits, &#123; say, KIND <span class="keyword">as</span> type &#125;  <span class="keyword">from</span> <span class="string">'./content.js'</span>;</div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"><span class="built_in">console</span>.log(type);</div><div class="line">say();</div><div class="line"></div><div class="line"><span class="comment">//apple </span></div><div class="line"><span class="comment">//Thailand Apple</span></div><div class="line"><span class="comment">//I like apple!</span></div></pre></td></tr></table></figure>
<p>整体加载,*为指定的一个对象。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//content.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> KIND = <span class="string">'Thailand Apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">'apple'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="string">'I like apple!'</span>;</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">//index.js</span></div><div class="line"><span class="keyword">import</span> fruits, * <span class="keyword">as</span> content <span class="keyword">from</span> <span class="string">'./content.js'</span>;</div><div class="line"><span class="built_in">console</span>.log(fruits);</div><div class="line"><span class="built_in">console</span>.log(content.type);</div><div class="line">content.say();</div><div class="line"></div><div class="line"><span class="comment">//apple </span></div><div class="line"><span class="comment">//Thailand Apple</span></div><div class="line"><span class="comment">//I like apple!</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/githubhaohao/ImageRoom/blob/master/Images/es6.jpg?raw=true&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ES6是什么&quot;&gt;&lt;a href=&quot;#ES6是什么&quot; cl
    
    </summary>
    
      <category term="ES6" scheme="https://githubhaohao.github.io/categories/ES6/"/>
    
    
      <category term="ES6入门" scheme="https://githubhaohao.github.io/tags/ES6%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>分分钟接入Tinker</title>
    <link href="https://githubhaohao.github.io/2017/01/18/%E5%88%86%E5%88%86%E9%92%9F%E6%8E%A5%E5%85%A5Tinker/"/>
    <id>https://githubhaohao.github.io/2017/01/18/分分钟接入Tinker/</id>
    <published>2017-01-18T01:23:38.000Z</published>
    <updated>2017-01-18T02:51:40.837Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tinker是什么"><a href="#Tinker是什么" class="headerlink" title="Tinker是什么"></a><a href="https://github.com/Tencent/tinker" target="_blank" rel="external">Tinker</a>是什么</h2><blockquote><p>Tinker是微信官方的Android热补丁解决方案，它支持动态下发代码、So库以及资源，让应用能够在不需要重新安装的情况下实现更新。当然，你也可以使用Tinker来更新你的插件。<br>它主要包括以下几个部分：</p>
<ul>
<li>1.gradle编译插件: tinker-patch-gradle-plugin</li>
<li>2.核心sdk库: tinker-android-lib</li>
<li>3.非gradle编译用户的命令行版本: tinker-patch-cli.jar</li>
</ul>
<footer><strong>Tencent</strong><cite>tinker</cite></footer></blockquote>
<p><br><br><img src="https://github.com/Tencent/tinker/raw/master/assets/tinker.png" alt="Tinker"></p>
<h2 id="引入依赖和插件"><a href="#引入依赖和插件" class="headerlink" title="引入依赖和插件"></a>引入依赖和插件</h2><p>在你项目根目录下的 <code>build.gradle</code> 文件中添加:</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">buildscript</span> &#123;</div><div class="line">    <span class="keyword">dependencies</span> &#123;</div><div class="line">        <span class="keyword">classpath</span> (<span class="string">'com.tencent.tinker:tinker-patch-gradle-plugin:1.7.6'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在 <code>app/build.gradle</code> 文件中添加依赖和插件：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    <span class="comment">//optional, help to generate the final application </span></div><div class="line">    provided(<span class="string">'com.tencent.tinker:tinker-android-anno:1.7.6'</span>)</div><div class="line">    <span class="comment">//tinker's main Android lib</span></div><div class="line">    <span class="keyword">compile</span>(<span class="string">'com.tencent.tinker:tinker-android-lib:1.7.6'</span>) </div><div class="line">    <span class="keyword">compile</span> <span class="string">"com.android.support:multidex:1.0.1"</span></div><div class="line">&#125;</div><div class="line">...</div><div class="line"></div><div class="line">...</div><div class="line">apply plugin: <span class="string">'com.tencent.tinker.patch'</span></div></pre></td></tr></table></figure>
<h2 id="添加task"><a href="#添加task" class="headerlink" title="添加task"></a>添加task</h2><p>添加task <code>tinkerPatch</code> 在 <code>app/build.gradle</code> 文件中,其中 <code>oldApk</code> 路径为出现BUG的APK路径（自定义），添加完之后Async Project。</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">tinkerPatch &#123;</div><div class="line"></div><div class="line">    oldApk = <span class="string">"J://tinkerSample/app-debug.apk"</span></div><div class="line">    ignoreWarning = <span class="keyword">true</span></div><div class="line">    useSign = <span class="keyword">true</span></div><div class="line">    buildConfig &#123;</div><div class="line">        applyMapping = <span class="keyword">null</span></div><div class="line">        applyResourceMapping = <span class="keyword">null</span></div><div class="line">        tinkerId = <span class="string">"tinkerId"</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    dex &#123;</div><div class="line">        dexMode = <span class="string">"jar"</span></div><div class="line">        usePreGeneratedPatchDex = <span class="keyword">false</span></div><div class="line">        pattern = [<span class="string">"classes*.dex"</span>,</div><div class="line">                   <span class="string">"assets/secondary-dex-?.jar"</span>]</div><div class="line">        loader = [<span class="string">"com.tencent.tinker.loader.*"</span>,</div><div class="line">                  <span class="string">"com.jc.tinkersample.SimpleApp"</span>,</div><div class="line">                  <span class="string">"com.jc.tinkersample.BaseBuildInfo"</span></div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    lib &#123;</div><div class="line">        pattern = [<span class="string">"lib/armeabi/*.so"</span>]</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    res &#123;</div><div class="line">        pattern = [<span class="string">"res/*"</span>, <span class="string">"assets/*"</span>, <span class="string">"resources.arsc"</span>, <span class="string">"AndroidManifest.xml"</span>]</div><div class="line">        ignoreChange = [<span class="string">"assets/sample_meta.txt"</span>]</div><div class="line">        largeModSize = <span class="number">100</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    packageConfig &#123;</div><div class="line">        configField(<span class="string">"patchMessage"</span>, <span class="string">"tinker is sample to use"</span>)</div><div class="line">        configField(<span class="string">"platform"</span>, <span class="string">"all"</span>)</div><div class="line">        configField(<span class="string">"patchVersion"</span>, <span class="string">"1.0"</span>)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sevenZip &#123;</div><div class="line">        zipArtifact = <span class="string">"com.tencent.mm:SevenZip:1.1.10"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="接入Tinker"><a href="#接入Tinker" class="headerlink" title="接入Tinker"></a>接入Tinker</h2><p>自定义Application继承 <code>DefaultApplicationLike</code> 类，也可以<a href="https://github.com/Tencent/tinker/wiki/Tinker-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%89%A9%E5%B1%95" target="_blank" rel="external">自定义扩展</a>。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@DefaultLifeCycle</span>(</div><div class="line">        application = <span class="string">"com.jc.tinkersample.SimpleApp"</span>,</div><div class="line">        flags = ShareConstants.TINKER_ENABLE_ALL,</div><div class="line">        loadVerifyFlag = <span class="keyword">false</span></div><div class="line">)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleAppLike</span> <span class="keyword">extends</span> <span class="title">DefaultApplicationLike</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SimpleAppLike</span><span class="params">(Application application, <span class="keyword">int</span> tinkerFlags, <span class="keyword">boolean</span> tinkerLoadVerifyFlag, <span class="keyword">long</span> applicationStartElapsedTime, <span class="keyword">long</span> applicationStartMillisTime, Intent tinkerResultIntent, Resources[] resources, ClassLoader[] classLoader, AssetManager[] assetManager)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(application, tinkerFlags, tinkerLoadVerifyFlag, applicationStartElapsedTime, applicationStartMillisTime, tinkerResultIntent, resources, classLoader, assetManager);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBaseContextAttached</span><span class="params">(Context base)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onBaseContextAttached(base);</div><div class="line">        MultiDex.install(base);</div><div class="line">        TinkerInstaller.install(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@TargetApi</span>(Build.VERSION_CODES.ICE_CREAM_SANDWICH)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerActivityLifecycleCallbacks</span><span class="params">(Application.ActivityLifecycleCallbacks callback)</span> </span>&#123;</div><div class="line">        getApplication().registerActivityLifecycleCallbacks(callback);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行安装到你的手机里，然后把 <code>app-debug.apk</code> 放到 <code>oldApk</code> 对应的路径下，用于生成 <code>patch.apk</code>。</p>
<p><img src="https://github.com/githubhaohao/TinkerSample/raw/master/image/app_debug.png" alt="app_debug"></p>
<p>然后，修复你项目的bug（这里只是象征性地修改了一下Text），打开Android Studio 右侧的gradle project 运行 <code>tinkerPatchDebug</code> task生成<code>patch.apk</code>。</p>
<p><img src="https://github.com/githubhaohao/TinkerSample/blob/master/image/terminal.png?raw=true" alt="command"></p>
<p><img src="https://github.com/githubhaohao/TinkerSample/blob/master/image/tinker_task.png?raw=true" alt="tinker_task"></p>
<p>找到<code>patch_signed_7zip.apk</code> 文件。</p>
<p><img src="https://github.com/githubhaohao/TinkerSample/blob/master/image/signed_apk.png?raw=true" alt="new_apk"></p>
<p>复制 <code>patch_signed_7zip.apk</code> 文件把它放到手机外部存储目录下 （这里为根目录）。 </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">String path = Environment.getExternalStorageDirectory().getAbsolutePath() + <span class="string">"/patch_signed_7zip.apk"</span>;</div><div class="line">File file = <span class="keyword">new</span> File(path);</div><div class="line"><span class="keyword">if</span> (file.exists())&#123;</div><div class="line">    Toast.makeText(<span class="keyword">this</span>, <span class="string">"patch.apk is existing."</span>, Toast.LENGTH_SHORT).show();</div><div class="line">    TinkerInstaller.onReceiveUpgradePatch(getApplicationContext(), path);</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    Toast.makeText(<span class="keyword">this</span>,<span class="string">"patch.apk is inexistent."</span>, Toast.LENGTH_SHORT).show();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>调用Tinker API <code>TinkerInstaller.onReceiveUpgradePatch(getApplicationContext(), path);</code> 进行热修复，重启app热修复完成。</p>
<p>详细代码<a href="https://github.com/githubhaohao/TinkerSample" target="_blank" rel="external">https://github.com/githubhaohao/TinkerSample</a></p>
<h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><ol>
<li><a href="https://github.com/WeMobileDev/article/blob/master/%E5%BE%AE%E4%BF%A1Android%E7%83%AD%E8%A1%A5%E4%B8%81%E5%AE%9E%E8%B7%B5%E6%BC%94%E8%BF%9B%E4%B9%8B%E8%B7%AF.md" target="_blank" rel="external">微信Android热补丁实践演进之路</a></li>
<li><a href="https://github.com/WeMobileDev/article/blob/master/Android_N%E6%B7%B7%E5%90%88%E7%BC%96%E8%AF%91%E4%B8%8E%E5%AF%B9%E7%83%AD%E8%A1%A5%E4%B8%81%E5%BD%B1%E5%93%8D%E8%A7%A3%E6%9E%90.md" target="_blank" rel="external">Android N混合编译与对热补丁影响深度解析</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&amp;mid=2649286384&amp;idx=1&amp;sn=f1aff31d6a567674759be476bcd12549&amp;scene=4#wechat_redirect" target="_blank" rel="external">微信Tinker的一切都在这里，包括源码</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Tinker是什么&quot;&gt;&lt;a href=&quot;#Tinker是什么&quot; class=&quot;headerlink&quot; title=&quot;Tinker是什么&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Tencent/tinker&quot; target=&quot;_blank&quot;
    
    </summary>
    
      <category term="Android" scheme="https://githubhaohao.github.io/categories/Android/"/>
    
    
      <category term="Tinker" scheme="https://githubhaohao.github.io/tags/Tinker/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://githubhaohao.github.io/2017/01/12/cover/"/>
    <id>https://githubhaohao.github.io/2017/01/12/cover/</id>
    <published>2017-01-12T08:31:23.971Z</published>
    <updated>2017-01-18T01:30:29.106Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>合抱之木，生于毫末；九层之台，起于累土；千里之行，始于足下。</p>
<p><strong>老子</strong> </p>
</blockquote>
<p><div align="center"><br><img src="https://avatars0.githubusercontent.com/u/17926884?v=3&s=460" width="100" height="100" alt="logo"><br></div></p>
<p align="center"><i>不忘初心，不惧未来。<i><br><br><b>haohao</b><br><br>2017/01/14<br></i></i></p>

]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;合抱之木，生于毫末；九层之台，起于累土；千里之行，始于足下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;老子&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div align=&quot;center&quot;
    
    </summary>
    
    
      <category term="hello world" scheme="https://githubhaohao.github.io/tags/hello-world/"/>
    
  </entry>
  
</feed>
